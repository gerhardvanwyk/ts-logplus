{"version":3,"file":"ts-logplus.esm.js","sources":["../../src/logging/log/LoggerOptions.ts","../../src/logging/utils/DataStructures.ts","../../node_modules/stackframe/stackframe.js","../../node_modules/error-stack-parser/error-stack-parser.js","../../node_modules/stack-generator/node_modules/stackframe/stackframe.js","../../node_modules/stack-generator/stack-generator.js","../../node_modules/source-map/lib/util.js","../../node_modules/source-map/lib/binary-search.js","../../node_modules/source-map/lib/array-set.js","../../node_modules/source-map/lib/base64.js","../../node_modules/source-map/lib/base64-vlq.js","../../node_modules/source-map/lib/quick-sort.js","../../node_modules/source-map/lib/source-map-consumer.js","../../node_modules/stacktrace-gps/stacktrace-gps.js","../../node_modules/stacktrace-js/stacktrace.js","../../src/logging/utils/MessageUtils.ts","../../src/logging/log/standard/AbstractLogger.ts","../../src/logging/log/standard/ConsoleLoggerImpl.ts","../../src/logging/log/standard/MessageBufferLoggerImpl.ts","../../src/logging/log/standard/LogGroupRuntimeSettings.ts","../../src/logging/log/standard/LoggerFactoryImpl.ts","../../src/logging/log/category/AbstractCategoryLogger.ts","../../src/logging/log/category/CategoryConsoleLoggerImpl.ts","../../src/logging/log/category/CategoryDelegateLoggerImpl.ts","../../src/logging/log/category/CategoryExtensionLoggerImpl.ts","../../src/logging/log/category/CategoryMessageBufferImpl.ts","../../src/logging/log/category/CategoryRuntimeSettings.ts","../../src/logging/log/category/CategoryConfiguration.ts","../../src/logging/log/category/CategoryService.ts","../../src/logging/extension/ExtensionHelper.ts","../../src/logging/log/standard/LogGroupRule.ts","../../src/logging/log/standard/LoggerFactoryOptions.ts","../../src/logging/log/standard/LFService.ts","../../src/logging/control/LogGroupControl.ts","../../src/logging/control/CategoryServiceControl.ts","../../src/logging/log/category/Category.ts","../../src/logging/log/category/CategoryServiceFactory.ts","../../src/logging/utils/JSONHelper.ts","../../src/logging/ts-logplus.ts"],"sourcesContent":["/**\r\n * Log level for a logger.\r\n */\r\nexport enum LogLevel {\r\n\r\n  Finest,\r\n  Finer,\r\n  Fine,\r\n  Config,\r\n  Info,\r\n  Warning,\r\n  Severe\r\n}\r\n\r\n/* tslint:disable:no-namespace */\r\nexport namespace LogLevel {\r\n\r\n  /**\r\n   * Returns LogLevel based on string representation\r\n   * @param val Value\r\n   * @returns {LogLevel}, Error is thrown if invalid.\r\n   */\r\n  export function fromString(val: string): LogLevel {\r\n    if (val == null) {\r\n      throw new Error(\"Argument must be set\");\r\n    }\r\n\r\n    switch (val.toLowerCase()) {\r\n      case \"finest\":\r\n        return LogLevel.Finest;\r\n      case \"finer\":\r\n        return LogLevel.Finer;\r\n      case \"fine\":\r\n        return LogLevel.Fine;\r\n      case \"config\":\r\n        return LogLevel.Config;\r\n      case \"info\":\r\n        return LogLevel.Info;\r\n      case \"warning\":\r\n        return LogLevel.Warning;\r\n      case \"severe\":\r\n        return LogLevel.Severe;\r\n      default:\r\n        throw new Error(\"Unsupported value for conversion: \" + val);\r\n    }\r\n  }\r\n\r\n}\r\n/* tslint:disable:enable-namespace */\r\n\r\n/**\r\n * Where to log to? Pick one of the constants. Custom requires a callback to be present, see LFService.createLoggerFactory(...)\r\n * where this comes into play.\r\n */\r\nexport enum LoggerType {\r\n\r\n  Console,\r\n  MessageBuffer,\r\n  Custom\r\n}\r\n\r\n/**\r\n * Defines several date enums used for formatting a date.\r\n */\r\nexport enum DateFormatEnum {\r\n\r\n  /**\r\n   * Displays as: year-month-day hour:minute:second,millis -> 1999-02-12 23:59:59,123\r\n   * Note the date separator can be set separately.\r\n   */\r\n  Default,\r\n\r\n    /**\r\n     * Displays as: year-month-day hour:minute:second -> 1999-02-12 23:59:59\r\n     * Note the date separator can be set separately.\r\n     */\r\n  YearMonthDayTime,\r\n\r\n    /**\r\n     * Displays as: year-day-month hour:minute:second,millis -> 1999-12-02 23:59:59,123\r\n     * Note the date separator can be set separately.\r\n     */\r\n  YearDayMonthWithFullTime,\r\n\r\n    /**\r\n     * Displays as: year-day-month hour:minute:second -> 1999-12-02 23:59:59\r\n     * Note the date separator can be set separately.\r\n     */\r\n  YearDayMonthTime\r\n}\r\n\r\n/* tslint:disable:no-namespace */\r\nexport namespace DateFormatEnum {\r\n\r\n  /**\r\n   * Returns LogLevel based on string representation\r\n   * @param val Value\r\n   * @returns {LogLevel}, Error is thrown if invalid.\r\n   */\r\n  export function fromString(val: string): DateFormatEnum {\r\n    if (val == null) {\r\n      throw new Error(\"Argument must be set\");\r\n    }\r\n\r\n    switch (val.toLowerCase()) {\r\n      case \"default\":\r\n        return DateFormatEnum.Default;\r\n      case \"yearmonthdayTime\":\r\n        return DateFormatEnum.YearMonthDayTime;\r\n      case \"yeardaymonthwithfulltime\":\r\n        return DateFormatEnum.YearDayMonthWithFullTime;\r\n      case \"yeardaymonthtime\":\r\n        return DateFormatEnum.YearDayMonthTime;\r\n      default:\r\n        throw new Error(\"Unsupported value for conversion: \" + val);\r\n    }\r\n  }\r\n\r\n}\r\n/* tslint:disable:enable-namespace */\r\n\r\n/**\r\n * DateFormat class, stores data on how to format a date.\r\n */\r\nexport class DateFormat {\r\n\r\n  private _formatEnum: DateFormatEnum;\r\n  private _dateSeparator: string;\r\n\r\n  /**\r\n   * Constructor to define the dateformat used for logging, can be called empty as it uses defaults.\r\n   * @param formatEnum DateFormatEnum, use one of the constants from the enum. Defaults to DateFormatEnum.Default\r\n   * @param dateSeparator Separator used between dates, defaults to -\r\n   */\r\n  constructor(formatEnum: DateFormatEnum = DateFormatEnum.Default, dateSeparator: string = \"-\") {\r\n    this._formatEnum = formatEnum;\r\n    this._dateSeparator = dateSeparator;\r\n  }\r\n\r\n  get formatEnum(): DateFormatEnum {\r\n    return this._formatEnum;\r\n  }\r\n\r\n  set formatEnum(value: DateFormatEnum) {\r\n    this._formatEnum = value;\r\n  }\r\n\r\n  get dateSeparator(): string {\r\n    return this._dateSeparator;\r\n  }\r\n\r\n  set dateSeparator(value: string) {\r\n    this._dateSeparator = value;\r\n  }\r\n\r\n  public copy(): DateFormat {\r\n    return new DateFormat(this._formatEnum, this._dateSeparator);\r\n  }\r\n}\r\n\r\n/**\r\n * Information about the log format, what will a log line look like?\r\n */\r\nexport class LogFormat {\r\n\r\n  private _dateFormat: DateFormat;\r\n  private _showTimeStamp: boolean = true;\r\n  private _showLoggerName: boolean = true;\r\n\r\n  /**\r\n   * Constructor to create a LogFormat. Can be created without parameters where it will use sane defaults.\r\n   * @param dateFormat DateFormat (what needs the date look like in the log line)\r\n   * @param showTimeStamp Show date timestamp at all?\r\n   * @param showLoggerName Show the logger name?\r\n   */\r\n  constructor(dateFormat: DateFormat = new DateFormat(), showTimeStamp: boolean = true, showLoggerName: boolean = true) {\r\n    this._dateFormat = dateFormat;\r\n    this._showTimeStamp = showTimeStamp;\r\n    this._showLoggerName = showLoggerName;\r\n  }\r\n\r\n  get dateFormat(): DateFormat {\r\n    return this._dateFormat;\r\n  }\r\n\r\n  get showTimeStamp(): boolean {\r\n    return this._showTimeStamp;\r\n  }\r\n\r\n  set showTimeStamp(value: boolean) {\r\n    this._showTimeStamp = value;\r\n  }\r\n\r\n  get showLoggerName(): boolean {\r\n    return this._showLoggerName;\r\n  }\r\n\r\n  set showLoggerName(value: boolean) {\r\n    this._showLoggerName = value;\r\n  }\r\n}\r\n\r\n/**\r\n * Information about the log format, what will a log line look like?\r\n */\r\nexport class CategoryLogFormat {\r\n\r\n  private _dateFormat: DateFormat;\r\n  private _showTimeStamp: boolean;\r\n  private _showCategoryName: boolean;\r\n\r\n  /**\r\n   * Create an instance defining the category log format used.\r\n   * @param dateFormat Date format (uses default), for details see DateFormat class.\r\n   * @param showTimeStamp True to show timestamp in the logging, defaults to true.\r\n   * @param showCategoryName True to show category name in the logging, defaults to true.\r\n   */\r\n  constructor(dateFormat: DateFormat = new DateFormat(), showTimeStamp: boolean = true, showCategoryName: boolean = true) {\r\n    this._dateFormat = dateFormat;\r\n    this._showTimeStamp = showTimeStamp;\r\n    this._showCategoryName = showCategoryName;\r\n  }\r\n\r\n  get dateFormat(): DateFormat {\r\n    return this._dateFormat;\r\n  }\r\n\r\n  set dateFormat(value: DateFormat) {\r\n    this._dateFormat = value;\r\n  }\r\n\r\n  get showTimeStamp(): boolean {\r\n    return this._showTimeStamp;\r\n  }\r\n\r\n  set showTimeStamp(value: boolean) {\r\n    this._showTimeStamp = value;\r\n  }\r\n\r\n  get showCategoryName(): boolean {\r\n    return this._showCategoryName;\r\n  }\r\n\r\n  set showCategoryName(value: boolean) {\r\n    this._showCategoryName = value;\r\n  }\r\n\r\n  public copy(): CategoryLogFormat {\r\n    return new CategoryLogFormat(this._dateFormat.copy(), this._showTimeStamp, this._showCategoryName);\r\n  }\r\n}\r\n","class LinkedNode<T> {\r\n\r\n  private _value: T;\r\n  private _previous: LinkedNode<T> | null = null;\r\n  private _next: LinkedNode<T> | null = null;\r\n\r\n  constructor(value: T) {\r\n    this._value = value;\r\n  }\r\n\r\n  get previous(): LinkedNode<T> | null {\r\n    return this._previous;\r\n  }\r\n\r\n  set previous(value: LinkedNode<T> | null) {\r\n    this._previous = value;\r\n  }\r\n\r\n  get next(): LinkedNode<T> | null {\r\n    return this._next;\r\n  }\r\n\r\n  set next(value: LinkedNode<T> | null) {\r\n    this._next = value;\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value;\r\n  }\r\n}\r\n\r\n/**\r\n * Double linkedlist implementation.\r\n */\r\nexport class LinkedList<T> {\r\n\r\n  private head: LinkedNode<T> | null = null;\r\n  private size: number = 0;\r\n\r\n  public addHead(value: T): void {\r\n    if (!this.createHeadIfNeeded(value)) {\r\n      if (this.head != null) {\r\n        const nextNode = this.head.next;\r\n        const newHeadNode = new LinkedNode<T>(value);\r\n        if (nextNode != null) {\r\n          nextNode.previous = newHeadNode;\r\n          newHeadNode.next = nextNode;\r\n        }\r\n        this.head = newHeadNode;\r\n      }\r\n      else {\r\n        throw new Error(\"This should never happen, list implementation broken\");\r\n      }\r\n    }\r\n    this.size++;\r\n  }\r\n\r\n  public addTail(value: T): void {\r\n    if (!this.createHeadIfNeeded(value)) {\r\n      const oldTailNode = this.getTailNode();\r\n      if (oldTailNode != null) {\r\n        const newTailNode = new LinkedNode<T>(value);\r\n        oldTailNode.next = newTailNode;\r\n        newTailNode.previous = oldTailNode;\r\n      }\r\n      else {\r\n        throw new Error(\"List implementation broken\");\r\n      }\r\n    }\r\n    this.size++;\r\n  }\r\n\r\n  public clear() {\r\n    this.head = null;\r\n    this.size = 0;\r\n  }\r\n\r\n  public getHead(): T | null {\r\n    if (this.head != null) {\r\n      return this.head.value;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public removeHead(): T | null {\r\n    if (this.head != null) {\r\n      const oldHead = this.head;\r\n      const value = oldHead.value;\r\n      this.head = oldHead.next;\r\n      this.size--;\r\n      return value;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getTail(): T | null {\r\n    const node = this.getTailNode();\r\n    if (node != null) {\r\n      return node.value;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public removeTail(): T | null {\r\n    const node = this.getTailNode();\r\n    if (node != null) {\r\n      if (node === this.head) {\r\n        this.head = null;\r\n      }\r\n      else {\r\n        const previousNode = node.previous;\r\n        if (previousNode != null) {\r\n          previousNode.next = null;\r\n        }\r\n        else {\r\n          throw new Error(\"List implementation is broken\");\r\n        }\r\n      }\r\n      this.size--;\r\n      return node.value;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getSize(): number {\r\n    return this.size;\r\n  }\r\n\r\n  public filter(f: (value: T) => boolean): T[] {\r\n    const recurse = (fn: (value: T) => boolean, node: LinkedNode<T>, values: T[]) => {\r\n      if (fn(node.value)) {\r\n        values.push(node.value);\r\n      }\r\n\r\n      const nextNode = node.next;\r\n      if (nextNode != null) {\r\n        recurse(fn, nextNode, values);\r\n      }\r\n    };\r\n\r\n    const result: T[] = [];\r\n    const currentNode = this.head;\r\n    if (currentNode != null) {\r\n      recurse(f, currentNode, result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private createHeadIfNeeded(value: T): boolean {\r\n    if (this.head == null) {\r\n      this.head = new LinkedNode(value);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private getTailNode(): LinkedNode<T> | null {\r\n    if (this.head == null) {\r\n      return null;\r\n    }\r\n\r\n    let node = this.head;\r\n    while (node.next != null) {\r\n      node = node.next;\r\n    }\r\n\r\n    return node;\r\n  }\r\n}\r\n\r\n/**\r\n * Map implementation keyed by string (always).\r\n */\r\nexport class SimpleMap<V> {\r\n\r\n  private array: {[key: string]: V} = {};\r\n\r\n  public put(key: string, value: V): void {\r\n    this.array[key] = value;\r\n  }\r\n\r\n  public get(key: string): V | undefined {\r\n    return this.array[key];\r\n  }\r\n\r\n  public exists(key: string): boolean {\r\n    const value = this.array[key];\r\n    return (typeof value !== \"undefined\");\r\n\r\n  }\r\n\r\n  public remove(key: string): V | undefined {\r\n    const value = this.array[key];\r\n    if (typeof value !== \"undefined\") {\r\n      delete this.array[key];\r\n    }\r\n    return value;\r\n  }\r\n\r\n  public keys(): string[] {\r\n    const keys: string[] = [];\r\n    for (const key in this.array) {\r\n      // To prevent random stuff to appear\r\n      if (this.array.hasOwnProperty(key)) {\r\n        keys.push(key);\r\n      }\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  public values(): V[] {\r\n    const values: V[] = [];\r\n    for (const key in this.array) {\r\n      // To prevent random stuff to appear\r\n      if (this.array.hasOwnProperty(key)) {\r\n        values.push(this.get(key) as V);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n\r\n  public size(): number {\r\n    return this.keys().length;\r\n  }\r\n\r\n  public isEmpty(): boolean {\r\n    return this.size() === 0;\r\n  }\r\n\r\n  public clear(): void {\r\n    this.array = {};\r\n  }\r\n\r\n  public forEach(cbFunction: (key: string, value: V, index: number) => void): void {\r\n    let count = 0;\r\n    for (const key in this.array) {\r\n      // To prevent random stuff to appear\r\n      if (this.array.hasOwnProperty(key)) {\r\n        const value = this.array[key];\r\n        cbFunction(key, value, count);\r\n        count++;\r\n      }\r\n    }\r\n  }\r\n\r\n  public forEachValue(cbFunction: (value: V, index: number) => void): void {\r\n    let count = 0;\r\n    for (const key in this.array) {\r\n      // To prevent random stuff to appear\r\n      if (this.array.hasOwnProperty(key)) {\r\n        const value = this.array[key];\r\n        cbFunction(value, count);\r\n        count++;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Tuple to hold two values.\r\n */\r\nexport class TuplePair<X, Y> {\r\n\r\n  private _x: X;\r\n  private _y: Y;\r\n\r\n  constructor(x: X, y: Y) {\r\n    this._x = x;\r\n    this._y = y;\r\n  }\r\n\r\n  get x(): X {\r\n    return this._x;\r\n  }\r\n\r\n  set x(value: X) {\r\n    this._x = value;\r\n  }\r\n\r\n  get y(): Y {\r\n    return this._y;\r\n  }\r\n\r\n  set y(value: Y) {\r\n    this._y = value;\r\n  }\r\n}\r\n\r\n/**\r\n * Utility class to build up a string.\r\n */\r\nexport class StringBuilder {\r\n\r\n  private data: string[] = [];\r\n\r\n  public append(line: string): StringBuilder {\r\n    if (line === undefined || line == null) {\r\n      throw new Error(\"String must be set, cannot append null or undefined\");\r\n    }\r\n    this.data.push(line);\r\n    return this;\r\n  }\r\n\r\n  public appendLine(line: string): StringBuilder {\r\n    this.data.push(line + \"\\n\");\r\n    return this;\r\n  }\r\n\r\n  public isEmpty(): boolean {\r\n    return this.data.length === 0;\r\n  }\r\n\r\n  public clear(): void {\r\n    this.data = [];\r\n  }\r\n\r\n  public toString(separator: string = \"\"): string {\r\n    return this.data.join(separator);\r\n  }\r\n}\r\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n        if (source !== undefined) {\n            this.setSource(source);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        getSource: function () {\n            return this.source;\n        },\n        setSource: function (v) {\n            this.source = String(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    function _map(array, fn, thisArg) {\n        if (typeof Array.prototype.map === 'function') {\n            return array.map(fn, thisArg);\n        } else {\n            var output = new Array(array.length);\n            for (var i = 0; i < array.length; i++) {\n                output[i] = fn.call(thisArg, array[i]);\n            }\n            return output;\n        }\n    }\n\n    function _filter(array, fn, thisArg) {\n        if (typeof Array.prototype.filter === 'function') {\n            return array.filter(fn, thisArg);\n        } else {\n            var output = [];\n            for (var i = 0; i < array.length; i++) {\n                if (fn.call(thisArg, array[i])) {\n                    output.push(array[i]);\n                }\n            }\n            return output;\n        }\n    }\n\n    function _indexOf(array, target) {\n        if (typeof Array.prototype.indexOf === 'function') {\n            return array.indexOf(target);\n        } else {\n            for (var i = 0; i < array.length; i++) {\n                if (array[i] === target) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = _filter(error.stack.split('\\n'), function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return _map(filtered, function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = _indexOf(['eval', '<anonymous>'], locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = _filter(error.stack.split('\\n'), function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return _map(filtered, function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame(line);\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n                    return new StackFrame(functionName,\n                        undefined,\n                        locationParts[0],\n                        locationParts[1],\n                        locationParts[2],\n                        line);\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame(\n                            match[3] || undefined,\n                            undefined,\n                            match[2],\n                            match[1],\n                            undefined,\n                            lines[i]\n                        )\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = _filter(error.stack.split('\\n'), function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return _map(filtered, function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n                return new StackFrame(\n                    functionName,\n                    args,\n                    locationParts[0],\n                    locationParts[1],\n                    locationParts[2],\n                    line);\n            }, this);\n        }\n    };\n}));\n\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function (StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for(var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = util.toSetString(aStr);\n  var isDuplicate = has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    this._set[sStr] = idx;\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  var sStr = util.toSetString(aStr);\n  return has.call(this._set, sStr);\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  var sStr = util.toSetString(aStr);\n  if (has.call(this._set, sStr)) {\n    return this._set[sStr];\n  }\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace-gps', ['source-map', 'stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('source-map/lib/source-map-consumer'), require('stackframe'));\n    } else {\n        root.StackTraceGPS = factory(root.SourceMap || root.sourceMap, root.StackFrame);\n    }\n}(this, function(SourceMap, StackFrame) {\n    'use strict';\n\n    /**\n     * Make a X-Domain request to url and callback.\n     *\n     * @param {String} url\n     * @returns {Promise} with response text if fulfilled\n     */\n    function _xdr(url) {\n        return new Promise(function(resolve, reject) {\n            var req = new XMLHttpRequest();\n            req.open('get', url);\n            req.onerror = reject;\n            req.onreadystatechange = function onreadystatechange() {\n                if (req.readyState === 4) {\n                    if (req.status >= 200 && req.status < 300) {\n                        resolve(req.responseText);\n                    } else {\n                        reject(new Error('HTTP status: ' + req.status + ' retrieving ' + url));\n                    }\n                }\n            };\n            req.send();\n        });\n\n    }\n\n    /**\n     * Convert a Base64-encoded string into its original representation.\n     * Used for inline sourcemaps.\n     *\n     * @param {String} b64str Base-64 encoded string\n     * @returns {String} original representation of the base64-encoded string.\n     */\n    function _atob(b64str) {\n        if (typeof window !== 'undefined' && window.atob) {\n            return window.atob(b64str);\n        } else {\n            throw new Error('You must supply a polyfill for window.atob in this environment');\n        }\n    }\n\n    function _parseJson(string) {\n        if (typeof JSON !== 'undefined' && JSON.parse) {\n            return JSON.parse(string);\n        } else {\n            throw new Error('You must supply a polyfill for JSON.parse in this environment');\n        }\n    }\n\n    function _findFunctionName(source, lineNumber/*, columnNumber*/) {\n        // function {name}({args}) m[1]=name m[2]=args\n        var reFunctionDeclaration = /function\\s+([^(]*?)\\s*\\(([^)]*)\\)/;\n        // {name} = function ({args}) TODO args capture\n        var reFunctionExpression = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/;\n        // {name} = eval()\n        var reFunctionEvaluation = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/;\n        var lines = source.split('\\n');\n\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\n        var code = '';\n        var maxLines = Math.min(lineNumber, 20);\n        var m;\n        for (var i = 0; i < maxLines; ++i) {\n            // lineNo is 1-based, source[] is 0-based\n            var line = lines[lineNumber - i - 1];\n            var commentPos = line.indexOf('//');\n            if (commentPos >= 0) {\n                line = line.substr(0, commentPos);\n            }\n\n            if (line) {\n                code = line + code;\n                m = reFunctionExpression.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n                m = reFunctionDeclaration.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n                m = reFunctionEvaluation.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n            }\n        }\n        return undefined;\n    }\n\n    function _ensureSupportedEnvironment() {\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\n            throw new Error('Unable to consume source maps in older browsers');\n        }\n    }\n\n    function _ensureStackFrameIsLegit(stackframe) {\n        if (typeof stackframe !== 'object') {\n            throw new TypeError('Given StackFrame is not an object');\n        } else if (typeof stackframe.fileName !== 'string') {\n            throw new TypeError('Given file name is not a String');\n        } else if (typeof stackframe.lineNumber !== 'number' ||\n            stackframe.lineNumber % 1 !== 0 ||\n            stackframe.lineNumber < 1) {\n            throw new TypeError('Given line number must be a positive integer');\n        } else if (typeof stackframe.columnNumber !== 'number' ||\n            stackframe.columnNumber % 1 !== 0 ||\n            stackframe.columnNumber < 0) {\n            throw new TypeError('Given column number must be a non-negative integer');\n        }\n        return true;\n    }\n\n    function _findSourceMappingURL(source) {\n        var m = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)\\s*$/.exec(source);\n        if (m && m[1]) {\n            return m[1];\n        } else {\n            throw new Error('sourceMappingURL not found');\n        }\n    }\n\n    function _extractLocationInfoFromSourceMap(stackframe, rawSourceMap, sourceCache) {\n        return new Promise(function(resolve, reject) {\n            var mapConsumer = new SourceMap.SourceMapConsumer(rawSourceMap);\n\n            var loc = mapConsumer.originalPositionFor({\n                line: stackframe.lineNumber,\n                column: stackframe.columnNumber\n            });\n\n            if (loc.source) {\n                var mappedSource = mapConsumer.sourceContentFor(loc.source);\n                if (mappedSource) {\n                    sourceCache[loc.source] = mappedSource;\n                }\n                resolve(\n                    new StackFrame(\n                        loc.name || stackframe.functionName,\n                        stackframe.args,\n                        loc.source,\n                        loc.line,\n                        loc.column));\n            } else {\n                reject(new Error('Could not get original source for given stackframe and source map'));\n            }\n        });\n    }\n\n    /**\n     * @constructor\n     * @param {Object} opts\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n     *      opts.offline = True to prevent network requests.\n     *              Best effort without sources or source maps.\n     *      opts.ajax = Promise returning function to make X-Domain requests\n     */\n    return function StackTraceGPS(opts) {\n        if (!(this instanceof StackTraceGPS)) {\n            return new StackTraceGPS(opts);\n        }\n        opts = opts || {};\n\n        this.sourceCache = opts.sourceCache || {};\n\n        this.ajax = opts.ajax || _xdr;\n\n        this._atob = opts.atob || _atob;\n\n        this._get = function _get(location) {\n            return new Promise(function(resolve, reject) {\n                var isDataUrl = location.substr(0, 5) === 'data:';\n                if (this.sourceCache[location]) {\n                    resolve(this.sourceCache[location]);\n                } else if (opts.offline && !isDataUrl) {\n                    reject(new Error('Cannot make network requests in offline mode'));\n                } else {\n                    if (isDataUrl) {\n                        // data URLs can have parameters.\n                        // see http://tools.ietf.org/html/rfc2397\n                        var supportedEncodingRegexp =\n                            /^data:application\\/json;([\\w=:\"-]+;)*base64,/;\n                        var match = location.match(supportedEncodingRegexp);\n                        if (match) {\n                            var sourceMapStart = match[0].length;\n                            var encodedSource = location.substr(sourceMapStart);\n                            var source = this._atob(encodedSource);\n                            this.sourceCache[location] = source;\n                            resolve(source);\n                        } else {\n                            reject(new Error('The encoding of the inline sourcemap is not supported'));\n                        }\n                    } else {\n                        var xhrPromise = this.ajax(location, {method: 'get'});\n                        // Cache the Promise to prevent duplicate in-flight requests\n                        this.sourceCache[location] = xhrPromise;\n                        xhrPromise.then(resolve, reject);\n                    }\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, enhance function name and use source maps for a\n         * better StackFrame.\n         *\n         * @param {StackFrame} stackframe object\n         * @returns {Promise} that resolves with with source-mapped StackFrame\n         */\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n            return new Promise(function(resolve, reject) {\n                this.getMappedLocation(stackframe).then(function(mappedStackFrame) {\n                    function resolveMappedStackFrame() {\n                        resolve(mappedStackFrame);\n                    }\n\n                    this.findFunctionName(mappedStackFrame)\n                        .then(resolve, resolveMappedStackFrame)\n                        ['catch'](resolveMappedStackFrame);\n                }.bind(this), reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, guess function name from location information.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureStackFrameIsLegit(stackframe);\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                    var lineNumber = stackframe.lineNumber;\n                    var columnNumber = stackframe.columnNumber;\n                    var guessedFunctionName = _findFunctionName(source, lineNumber, columnNumber);\n                    // Only replace functionName if we found something\n                    if (guessedFunctionName) {\n                        resolve(new StackFrame(guessedFunctionName,\n                            stackframe.args,\n                            stackframe.fileName,\n                            lineNumber,\n                            columnNumber));\n                    } else {\n                        resolve(stackframe);\n                    }\n                }, reject)['catch'](reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureSupportedEnvironment();\n                _ensureStackFrameIsLegit(stackframe);\n\n                var sourceCache = this.sourceCache;\n                var fileName = stackframe.fileName;\n                this._get(fileName).then(function(source) {\n                    var sourceMappingURL = _findSourceMappingURL(source);\n                    var isDataUrl = sourceMappingURL.substr(0, 5) === 'data:';\n                    var base = fileName.substring(0, fileName.lastIndexOf('/') + 1);\n\n                    if (sourceMappingURL[0] !== '/' && !isDataUrl && !(/^https?:\\/\\/|^\\/\\//i).test(sourceMappingURL)) {\n                        sourceMappingURL = base + sourceMappingURL;\n                    }\n\n                    this._get(sourceMappingURL).then(function(sourceMap) {\n                        if (typeof sourceMap === 'string') {\n                            sourceMap = _parseJson(sourceMap.replace(/^\\)\\]\\}'/, ''));\n                        }\n                        if (typeof sourceMap.sourceRoot === 'undefined') {\n                            sourceMap.sourceRoot = base;\n                        }\n\n                        _extractLocationInfoFromSourceMap(stackframe, sourceMap, sourceCache)\n                            .then(resolve)['catch'](function() {\n                            resolve(stackframe);\n                        });\n                    }, reject)['catch'](reject);\n                }.bind(this), reject)['catch'](reject);\n            }.bind(this));\n        };\n    };\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace', ['error-stack-parser', 'stack-generator', 'stacktrace-gps'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('error-stack-parser'), require('stack-generator'), require('stacktrace-gps'));\n    } else {\n        root.StackTrace = factory(root.ErrorStackParser, root.StackGenerator, root.StackTraceGPS);\n    }\n}(this, function StackTrace(ErrorStackParser, StackGenerator, StackTraceGPS) {\n    var _options = {\n        filter: function(stackframe) {\n            // Filter out stackframes for this library by default\n            return (stackframe.functionName || '').indexOf('StackTrace$$') === -1 &&\n                (stackframe.functionName || '').indexOf('ErrorStackParser$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackTraceGPS$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackGenerator$$') === -1;\n        },\n        sourceCache: {}\n    };\n\n    var _generateError = function StackTrace$$GenerateError() {\n        try {\n            // Error must be thrown to get stack in IE\n            throw new Error();\n        } catch (err) {\n            return err;\n        }\n    };\n\n    /**\n     * Merge 2 given Objects. If a conflict occurs the second object wins.\n     * Does not do deep merges.\n     *\n     * @param {Object} first base object\n     * @param {Object} second overrides\n     * @returns {Object} merged first and second\n     * @private\n     */\n    function _merge(first, second) {\n        var target = {};\n\n        [first, second].forEach(function(obj) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    target[prop] = obj[prop];\n                }\n            }\n            return target;\n        });\n\n        return target;\n    }\n\n    function _isShapedLikeParsableError(err) {\n        return err.stack || err['opera#sourceloc'];\n    }\n\n    function _filtered(stackframes, filter) {\n        if (typeof filter === 'function') {\n            return stackframes.filter(filter);\n        }\n        return stackframes;\n    }\n\n    return {\n        /**\n         * Get a backtrace from invocation point.\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        get: function StackTrace$$get(opts) {\n            var err = _generateError();\n            return _isShapedLikeParsableError(err) ? this.fromError(err, opts) : this.generateArtificially(opts);\n        },\n\n        /**\n         * Get a backtrace from invocation point.\n         * IMPORTANT: Does not handle source maps or guess function names!\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        getSync: function StackTrace$$getSync(opts) {\n            opts = _merge(_options, opts);\n            var err = _generateError();\n            var stack = _isShapedLikeParsableError(err) ? ErrorStackParser.parse(err) : StackGenerator.backtrace(opts);\n            return _filtered(stack, opts.filter);\n        },\n\n        /**\n         * Given an error object, parse it.\n         *\n         * @param {Error} error object\n         * @param {Object} opts\n         * @returns {Promise} for Array[StackFrame}\n         */\n        fromError: function StackTrace$$fromError(error, opts) {\n            opts = _merge(_options, opts);\n            var gps = new StackTraceGPS(opts);\n            return new Promise(function(resolve) {\n                var stackframes = _filtered(ErrorStackParser.parse(error), opts.filter);\n                resolve(Promise.all(stackframes.map(function(sf) {\n                    return new Promise(function(resolve) {\n                        function resolveOriginal() {\n                            resolve(sf);\n                        }\n\n                        gps.pinpoint(sf).then(resolve, resolveOriginal)['catch'](resolveOriginal);\n                    });\n                })));\n            }.bind(this));\n        },\n\n        /**\n         * Use StackGenerator to generate a backtrace.\n         *\n         * @param {Object} opts\n         * @returns {Promise} of Array[StackFrame]\n         */\n        generateArtificially: function StackTrace$$generateArtificially(opts) {\n            opts = _merge(_options, opts);\n            var stackFrames = StackGenerator.backtrace(opts);\n            if (typeof opts.filter === 'function') {\n                stackFrames = stackFrames.filter(opts.filter);\n            }\n            return Promise.resolve(stackFrames);\n        },\n\n        /**\n         * Given a function, wrap it such that invocations trigger a callback that\n         * is called with a stack trace.\n         *\n         * @param {Function} fn to be instrumented\n         * @param {Function} callback function to call with a stack trace on invocation\n         * @param {Function} errback optional function to call with error if unable to get stack trace.\n         * @param {Object} thisArg optional context object (e.g. window)\n         */\n        instrument: function StackTrace$$instrument(fn, callback, errback, thisArg) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                // Already instrumented, return given Function\n                return fn;\n            }\n\n            var instrumented = function StackTrace$$instrumented() {\n                try {\n                    this.get().then(callback, errback)['catch'](errback);\n                    return fn.apply(thisArg || this, arguments);\n                } catch (e) {\n                    if (_isShapedLikeParsableError(e)) {\n                        this.fromError(e).then(callback, errback)['catch'](errback);\n                    }\n                    throw e;\n                }\n            }.bind(this);\n            instrumented.__stacktraceOriginalFn = fn;\n\n            return instrumented;\n        },\n\n        /**\n         * Given a function that has been instrumented,\n         * revert the function to it's original (non-instrumented) state.\n         *\n         * @param {Function} fn to de-instrument\n         */\n        deinstrument: function StackTrace$$deinstrument(fn) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot de-instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                return fn.__stacktraceOriginalFn;\n            } else {\n                // Function not instrumented, return original\n                return fn;\n            }\n        },\n\n        /**\n         * Given an error message and Array of StackFrames, serialize and POST to given URL.\n         *\n         * @param {Array} stackframes\n         * @param {String} url\n         * @param {String} errorMsg\n         */\n        report: function StackTrace$$report(stackframes, url, errorMsg) {\n            return new Promise(function(resolve, reject) {\n                var req = new XMLHttpRequest();\n                req.onerror = reject;\n                req.onreadystatechange = function onreadystatechange() {\n                    if (req.readyState === 4) {\n                        if (req.status >= 200 && req.status < 400) {\n                            resolve(req.responseText);\n                        } else {\n                            reject(new Error('POST to ' + url + ' failed with status: ' + req.status));\n                        }\n                    }\n                };\n                req.open('post', url);\n                req.setRequestHeader('Content-Type', 'application/json');\n\n                var reportPayload = {stack: stackframes};\n                if (errorMsg !== undefined) {\n                    reportPayload.message = errorMsg;\n                }\n\n                req.send(JSON.stringify(reportPayload));\n            });\n        }\n    };\n}));\n","import * as ST from \"stacktrace-js\";\r\nimport {CategoryLogMessage} from \"../log/category/AbstractCategoryLogger\";\r\nimport {DateFormat, DateFormatEnum, LogLevel} from \"../log/LoggerOptions\";\r\nimport {LogMessage} from \"../log/standard/AbstractLogger\";\r\nimport {Category} from \"../log/category/Category\";\r\n\r\n/**\r\n * Some utilities to format messages.\r\n */\r\nexport class MessageFormatUtils {\r\n\r\n  /**\r\n   * Render given date in given DateFormat and return as String.\r\n   * @param date Date\r\n   * @param dateFormat Format\r\n   * @returns {string} Formatted date\r\n   */\r\n  public static renderDate(date: Date, dateFormat: DateFormat): string {\r\n    const lpad = (value: string, chars: number, padWith: string): string => {\r\n      const howMany = chars - value.length;\r\n      if (howMany > 0) {\r\n        let res: string = \"\";\r\n        for (let i = 0; i < howMany; i++) {\r\n          res += padWith;\r\n        }\r\n        res += value;\r\n        return res;\r\n      }\r\n      return value;\r\n    };\r\n\r\n    const fullYear = (d: Date): string => {\r\n      return lpad(d.getFullYear().toString(), 4, \"0\");\r\n    };\r\n\r\n    const month = (d: Date): string => {\r\n      return lpad((d.getMonth() + 1).toString(), 2, \"0\");\r\n    };\r\n\r\n    const day = (d: Date): string => {\r\n      return lpad(d.getDate().toString(), 2, \"0\");\r\n    };\r\n\r\n    const hours = (d: Date): string => {\r\n      return lpad(d.getHours().toString(), 2, \"0\");\r\n    };\r\n\r\n    const minutes = (d: Date): string => {\r\n      return lpad(d.getMinutes().toString(), 2, \"0\");\r\n    };\r\n\r\n    const seconds = (d: Date): string => {\r\n      return lpad(d.getSeconds().toString(), 2, \"0\");\r\n    };\r\n\r\n    const millis = (d: Date): string => {\r\n      return lpad(d.getMilliseconds().toString(), 3, \"0\");\r\n    };\r\n\r\n    const dateSeparator = dateFormat.dateSeparator;\r\n    let ds: string = \"\";\r\n    switch (dateFormat.formatEnum) {\r\n      case DateFormatEnum.Default:\r\n        // yyyy-mm-dd hh:mm:ss,m\r\n        ds = fullYear(date) + dateSeparator + month(date) + dateSeparator + day(date) + \" \" +\r\n          hours(date) + \":\" + minutes(date) + \":\" + seconds(date) + \",\" + millis(date);\r\n        break;\r\n      case DateFormatEnum.YearMonthDayTime:\r\n        ds = fullYear(date) + dateSeparator + month(date) + dateSeparator + day(date) + \" \" +\r\n          hours(date) + \":\" + minutes(date) + \":\" + seconds(date);\r\n        break;\r\n      case DateFormatEnum.YearDayMonthWithFullTime:\r\n        ds = fullYear(date) + dateSeparator + day(date) + dateSeparator + month(date) + \" \" +\r\n          hours(date) + \":\" + minutes(date) + \":\" + seconds(date) + \",\" + millis(date);\r\n        break;\r\n      case DateFormatEnum.YearDayMonthTime:\r\n        ds = fullYear(date) + dateSeparator + day(date) + dateSeparator + month(date) + \" \" +\r\n          hours(date) + \":\" + minutes(date) + \":\" + seconds(date);\r\n        break;\r\n      default:\r\n        throw new Error(\"Unsupported date format enum: \" + dateFormat.formatEnum);\r\n    }\r\n    return ds;\r\n  }\r\n\r\n  /**\r\n   * Renders given category log message in default format.\r\n   * @param msg Message to format\r\n   * @param addStack If true adds the stack to the output, otherwise skips it\r\n   * @returns {string} Formatted message\r\n   */\r\n  public static renderDefaultMessage(msg: CategoryLogMessage, addStack: boolean): string {\r\n    let result: string = \"\";\r\n\r\n    const logFormat = msg.logFormat;\r\n    if (logFormat.showTimeStamp) {\r\n      result += MessageFormatUtils.renderDate(msg.date, logFormat.dateFormat) + \" \";\r\n    }\r\n\r\n    result += LogLevel[msg.level].toUpperCase();\r\n    if (msg.isResolvedErrorMessage) {\r\n      result += \" (resolved)\";\r\n    }\r\n    result += \" \";\r\n\r\n    if (logFormat.showCategoryName) {\r\n      result += \"[\";\r\n      msg.categories.forEach((value: Category, idx: number) => {\r\n        if (idx > 0) {\r\n          result += \", \";\r\n        }\r\n        result += value.name;\r\n      });\r\n      result += \"]\";\r\n    }\r\n\r\n    // Get the normal string message first\r\n    let actualStringMsg: string = \"\";\r\n    let dataString: string = \"\";\r\n\r\n    const messageOrLogData = msg.message;\r\n\r\n    if (typeof messageOrLogData === \"string\") {\r\n      actualStringMsg = messageOrLogData;\r\n    }\r\n    else {\r\n      const logData = messageOrLogData;\r\n      actualStringMsg = logData.msg;\r\n\r\n      // We do have data?\r\n      if (logData.data) {\r\n        dataString = \" [data]: \" + (logData.ds ? logData.ds(logData.data) : JSON.stringify(logData.data));\r\n      }\r\n    }\r\n\r\n    result += \" \" + actualStringMsg + \"\" + dataString;\r\n    if (addStack && msg.errorAsStack !== null) {\r\n      result += \"\\n\" + msg.errorAsStack;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Renders given log4j log message in default format.\r\n   * @param msg Message to format\r\n   * @param addStack If true adds the stack to the output, otherwise skips it\r\n   * @returns {string} Formatted message\r\n   */\r\n  public static renderDefaultLog4jMessage(msg: LogMessage, addStack: boolean): string {\r\n    const format = msg.logGroupRule.logFormat;\r\n    let result = \"\";\r\n    if (format.showTimeStamp) {\r\n      result += MessageFormatUtils.renderDate(msg.date, format.dateFormat) + \" \";\r\n    }\r\n\r\n    result += LogLevel[msg.level].toUpperCase() + \" \";\r\n    if (format.showLoggerName) {\r\n      result += \"[\" + msg.loggerName + \"]\";\r\n    }\r\n\r\n    // Get the normal string message first\r\n    let actualStringMsg: string = \"\";\r\n    let dataString: string = \"\";\r\n\r\n    if (typeof msg.message === \"string\") {\r\n      actualStringMsg = msg.message;\r\n    }\r\n    else {\r\n      const logData = msg.message;\r\n      actualStringMsg = logData.msg;\r\n\r\n      // We do have data?\r\n      if (logData.data) {\r\n        dataString = \" [data]: \" + (logData.ds ? logData.ds(logData.data) : JSON.stringify(logData.data));\r\n      }\r\n    }\r\n\r\n    result += \" \" + actualStringMsg + \"\" + dataString;\r\n    if (addStack && msg.errorAsStack !== null) {\r\n      result += \"\\n\" + msg.errorAsStack;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Render error as stack\r\n   * @param error Return error as Promise\r\n   * @returns {Promise<string>|Promise} Promise for stack\r\n   */\r\n  public static renderError(error: Error): Promise<string> {\r\n    let result = error.name + \": \" + error.message + \"\\n@\";\r\n    return new Promise<string>((resolve: any) => {\r\n\r\n      // This one has a promise too\r\n      ST.fromError(error, {offline: true}).then((frames: ST.StackFrame[]) => {\r\n        const stackStr = (frames.map((frame: ST.StackFrame) => {\r\n          return frame.toString();\r\n        }) ).join(\"\\n  \");\r\n\r\n        result += \"\\n\" + stackStr;\r\n\r\n        // This resolves our returned promise\r\n        resolve(result);\r\n      }).catch(() => {\r\n        result = \"Unexpected error object was passed in. \";\r\n        try {\r\n          result += \"Could not resolve it, stringified object: \" + JSON.stringify(error);\r\n        }\r\n        catch (e) {\r\n          // Cannot stringify can only tell something was wrong.\r\n          result += \"Could not resolve it or stringify it.\";\r\n        }\r\n        resolve(result);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import {LogLevel} from \"../LoggerOptions\";\r\nimport {ErrorType, Logger, MessageType} from \"./Logger\";\r\nimport {LinkedList} from \"../../utils/DataStructures\";\r\nimport {MessageFormatUtils} from \"../../utils/MessageUtils\";\r\nimport {LogData} from \"../LogData\";\r\nimport {LogGroupRule} from \"./LogGroupRule\";\r\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\r\n\r\n/**\r\n * Log message, providing all data for a single message.\r\n */\r\nexport interface LogMessage {\r\n\r\n  /**\r\n   * Name of the logger.\r\n   */\r\n  readonly loggerName: string;\r\n\r\n  /**\r\n   * Original, unformatted message or LogData.\r\n   */\r\n  readonly message: string | LogData;\r\n\r\n  /**\r\n   * Returns the resolved stack (based on error).\r\n   * Available only when error is present, null otherwise.\r\n   */\r\n  readonly errorAsStack: string | null;\r\n\r\n  /**\r\n   * Error when present, or null.\r\n   */\r\n  readonly error: Error | null;\r\n\r\n  /**\r\n   * Which LogGroupRule matched for this message.\r\n   */\r\n  readonly logGroupRule: LogGroupRule;\r\n\r\n  /**\r\n   * Time for message.\r\n   */\r\n  readonly date: Date;\r\n\r\n  /**\r\n   * LogLevel used\r\n   */\r\n  readonly level: LogLevel;\r\n\r\n  /**\r\n   * True if message represents LogData (false for a string message).\r\n   */\r\n  readonly isMessageLogData: boolean;\r\n\r\n  /**\r\n   * Always retrieves the message, from either the string directly\r\n   * or in case of LogData from LogData itself.\r\n   */\r\n  readonly messageAsString: string;\r\n\r\n  /**\r\n   * If present returns LogData, otherwise null.\r\n   */\r\n  readonly logData: LogData | null;\r\n}\r\n\r\ninterface LogMessageInternal extends LogMessage {\r\n\r\n  /**\r\n   * True if the message is done (ready), if false\r\n   * we wait for a promise.\r\n   */\r\n  ready: boolean;\r\n}\r\n\r\nclass LogMessageInternalImpl implements LogMessageInternal {\r\n\r\n  private _loggerName: string;\r\n  private _message: string | LogData;\r\n  private _errorAsStack: string | null = null;\r\n  private _error: Error | null = null;\r\n  private _logGroupRule: LogGroupRule;\r\n  private _date: Date;\r\n  private _level: LogLevel;\r\n  private _ready: boolean;\r\n\r\n  constructor(loggerName: string, message: string | LogData, errorAsStack: string | null, error: Error | null, logGroupRule: LogGroupRule, date: Date, level: LogLevel, ready: boolean) {\r\n    this._loggerName = loggerName;\r\n    this._message = message;\r\n    this._errorAsStack = errorAsStack;\r\n    this._error = error;\r\n    this._logGroupRule = logGroupRule;\r\n    this._date = date;\r\n    this._level = level;\r\n    this._ready = ready;\r\n  }\r\n\r\n  get loggerName(): string {\r\n    return this._loggerName;\r\n  }\r\n\r\n  get message(): string | LogData {\r\n    return this._message;\r\n  }\r\n\r\n  set message(value: string | LogData) {\r\n    this._message = value;\r\n  }\r\n\r\n  get errorAsStack(): string | any {\r\n    return this._errorAsStack;\r\n  }\r\n\r\n  set errorAsStack(value: string | any) {\r\n    this._errorAsStack = value;\r\n  }\r\n\r\n  get error(): Error | any {\r\n    return this._error;\r\n  }\r\n\r\n  set error(value: Error | any) {\r\n    this._error = value;\r\n  }\r\n\r\n  get logGroupRule(): LogGroupRule {\r\n    return this._logGroupRule;\r\n  }\r\n\r\n  set logGroupRule(value: LogGroupRule) {\r\n    this._logGroupRule = value;\r\n  }\r\n\r\n  get date(): Date {\r\n    return this._date;\r\n  }\r\n\r\n  set date(value: Date) {\r\n    this._date = value;\r\n  }\r\n\r\n  get level(): LogLevel {\r\n    return this._level;\r\n  }\r\n\r\n  set level(value: LogLevel) {\r\n    this._level = value;\r\n  }\r\n\r\n  get isMessageLogData(): boolean {\r\n    return typeof(this._message) !== \"string\";\r\n  }\r\n\r\n  get ready(): boolean {\r\n    return this._ready;\r\n  }\r\n\r\n  set ready(value: boolean) {\r\n    this._ready = value;\r\n  }\r\n\r\n  get messageAsString(): string {\r\n    if (typeof(this._message) === \"string\") {\r\n      return this._message;\r\n    }\r\n    return this._message.msg;\r\n  }\r\n\r\n  get logData(): LogData | null {\r\n    let result: LogData | null = null;\r\n    if (typeof(this._message) !== \"string\") {\r\n      result = this.message as LogData;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\n/**\r\n * Abstract base logger, extend to easily implement a custom logger that\r\n * logs wherever you want. You only need to implement doLog(msg: LogMessage) and\r\n * log that somewhere (it will contain format and everything else).\r\n */\r\nexport abstract class AbstractLogger implements Logger {\r\n\r\n  private _logGroupRuntimeSettings: LogGroupRuntimeSettings;\r\n  private _allMessages: LinkedList<LogMessageInternal> = new LinkedList<LogMessageInternal>();\r\n\r\n  protected _name: string;\r\n  protected _open: boolean = true;\r\n\r\n  constructor(name: string, logGroupRuntimeSettings: LogGroupRuntimeSettings) {\r\n    this._name = name;\r\n    this._logGroupRuntimeSettings = logGroupRuntimeSettings;\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public finest(msg: MessageType, error: ErrorType = null): void {\r\n    this._log(LogLevel.Finest, msg, error);\r\n  }\r\n\r\n  public finer(msg: MessageType, error: ErrorType = null): void {\r\n    this._log(LogLevel.Finer, msg, error);\r\n  }\r\n\r\n  public fine(msg: MessageType, error: ErrorType = null): void {\r\n    this._log(LogLevel.Fine, msg, error);\r\n  }\r\n\r\n  public config(msg: MessageType, error: ErrorType = null): void {\r\n    this._log(LogLevel.Config, msg, error);\r\n  }\r\n\r\n  public info(msg: MessageType, error: ErrorType = null): void {\r\n    this._log(LogLevel.Info, msg, error);\r\n  }\r\n\r\n  public warning(msg: MessageType, error: ErrorType = null): void {\r\n    this._log(LogLevel.Warning, msg, error);\r\n  }\r\n\r\n  public severe(msg: MessageType, error: ErrorType = null): void {\r\n    this._log(LogLevel.Severe, msg, error);\r\n  }\r\n\r\n  public isFinestEnabled(): boolean {\r\n    return this._logGroupRuntimeSettings.level === LogLevel.Finest;\r\n  }\r\n\r\n  public isFinerEnabled(): boolean {\r\n    return this._logGroupRuntimeSettings.level <= LogLevel.Finer;\r\n  }\r\n\r\n  public isFineEnabled(): boolean {\r\n    return this._logGroupRuntimeSettings.level <= LogLevel.Fine;\r\n  }\r\n\r\n  public isConfigEnabled(): boolean {\r\n    return this._logGroupRuntimeSettings.level <= LogLevel.Config;\r\n  }\r\n\r\n  public isInfoEnabled(): boolean {\r\n    return this._logGroupRuntimeSettings.level <= LogLevel.Info;\r\n  }\r\n\r\n  public isWarningEnabled(): boolean {\r\n    return this._logGroupRuntimeSettings.level <= LogLevel.Warning;\r\n  }\r\n\r\n  public isSevereEnabled(): boolean {\r\n    return this._logGroupRuntimeSettings.level <= LogLevel.Severe;\r\n  }\r\n\r\n  public getLogLevel(): LogLevel {\r\n    return this._logGroupRuntimeSettings.level;\r\n  }\r\n\r\n  public isOpen(): boolean {\r\n    return this._open;\r\n  }\r\n\r\n  public close(): void {\r\n    this._open = false;\r\n    this._allMessages.clear();\r\n  }\r\n\r\n  protected createDefaultLogMessage(msg: LogMessage): string {\r\n    return MessageFormatUtils.renderDefaultLog4jMessage(msg, true);\r\n  }\r\n\r\n  /**\r\n   * Return optional message formatter. All LoggerTypes (except custom) will see if\r\n   * they have this, and if so use it to log.\r\n   * @returns {((message:LogMessage)=>string)|null}\r\n   */\r\n  protected _getMessageFormatter(): ((message: LogMessage) => string) | null {\r\n    return this._logGroupRuntimeSettings.formatterLogMessage;\r\n  }\r\n\r\n  protected abstract doLog(msg: LogMessage): void;\r\n\r\n  private _log(level: LogLevel, msg: MessageType, error: ErrorType = null): void {\r\n    if (this._open && this._logGroupRuntimeSettings.level <= level) {\r\n      const functionMessage = (): string | LogData => {\r\n        if (typeof msg === \"function\") {\r\n          return msg();\r\n        }\r\n        return msg;\r\n      };\r\n      const functionError = (): Error | null => {\r\n        if (typeof error === \"function\") {\r\n          return error();\r\n        }\r\n        return error;\r\n      };\r\n      this._allMessages.addTail(this.createMessage(level, functionMessage, functionError, new Date()));\r\n      this.processMessages();\r\n    }\r\n  }\r\n\r\n  private createMessage(level: LogLevel, msg: () => string | LogData, error: () => Error | null, date: Date): LogMessageInternal {\r\n    const errorResult = error();\r\n    if (errorResult !== null) {\r\n      const message = new LogMessageInternalImpl(this._name, msg(), null, errorResult, this._logGroupRuntimeSettings.logGroupRule, date, level, false);\r\n      MessageFormatUtils.renderError(errorResult).then((stack: string) => {\r\n        message.errorAsStack = stack;\r\n        message.ready = true;\r\n        this.processMessages();\r\n      }).catch(() => {\r\n        message.errorAsStack = \"<UNKNOWN> unable to get stack.\";\r\n        message.ready = true;\r\n        this.processMessages();\r\n      });\r\n      return message;\r\n    }\r\n    return new LogMessageInternalImpl(this._name, msg(), null, errorResult, this._logGroupRuntimeSettings.logGroupRule, date, level, true);\r\n  }\r\n\r\n  private processMessages(): void {\r\n    // Basically we wait until errors are resolved (those messages\r\n    // may not be ready).\r\n    const msgs = this._allMessages;\r\n    if (msgs.getSize() > 0) {\r\n      do {\r\n        const msg = msgs.getHead();\r\n        if (msg != null) {\r\n          if (!msg.ready) {\r\n            break;\r\n          }\r\n          msgs.removeHead();\r\n          // This can never be null normally, but strict null checking ...\r\n          if (msg.message !== null) {\r\n            this.doLog(msg);\r\n          }\r\n        }\r\n      }\r\n      while (msgs.getSize() > 0);\r\n    }\r\n  }\r\n}\r\n","import {AbstractLogger, LogMessage} from \"./AbstractLogger\";\r\nimport {LogLevel} from \"../LoggerOptions\";\r\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\r\n\r\n/**\r\n * Simple logger, that logs to the console. If the console is unavailable will throw exception.\r\n */\r\nexport class ConsoleLoggerImpl extends AbstractLogger {\r\n\r\n  constructor(name: string, logGroupRuntimeSettings: LogGroupRuntimeSettings) {\r\n    super(name, logGroupRuntimeSettings);\r\n  }\r\n\r\n  protected doLog(message: LogMessage): void {\r\n    if (console !== undefined) {\r\n      let logged = false;\r\n      const logLevel = message.level;\r\n\r\n      const messageFormatter = this._getMessageFormatter();\r\n      let msg: string;\r\n      if (messageFormatter === null) {\r\n        msg = this.createDefaultLogMessage(message);\r\n      }\r\n      else {\r\n        msg = messageFormatter(message);\r\n      }\r\n\r\n      /* tslint:disable:no-console */\r\n      switch (logLevel) {\r\n        case LogLevel.Finest:\r\n          // Do not try trace we don't want a stack\r\n          break;\r\n        case LogLevel.Finer:\r\n          // Do not try trace we don't want a stack\r\n          break;\r\n        case LogLevel.Fine:\r\n          // Don't try, too much differences of consoles.\r\n          break;\r\n        case LogLevel.Config:\r\n          if (console.info) {\r\n            console.info(\"CONFIG \" + msg);\r\n            logged = true;\r\n          }\r\n          break;\r\n        case LogLevel.Info:\r\n          if (console.info) {\r\n            console.info(msg);\r\n            logged = true;\r\n          }\r\n          break;\r\n        case LogLevel.Warning:\r\n          if (console.warn) {\r\n            console.warn(msg);\r\n            logged = true;\r\n          }\r\n          break;\r\n        case LogLevel.Severe:\r\n          if (console.error) {\r\n            console.error(msg);\r\n            logged = true;\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(\"Log level not supported: \" + logLevel);\r\n      }\r\n      if (!logged) {\r\n        console.log(msg);\r\n      }\r\n      /* tslint:enable:no-console */\r\n    }\r\n    else {\r\n      throw new Error(\"Console is not defined, cannot log msg: \" + message.message);\r\n    }\r\n  }\r\n}\r\n","import {AbstractLogger, LogMessage} from \"./AbstractLogger\";\r\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\r\n\r\n/**\r\n * Logger which buffers all messages, use with care due to possible high memory footprint.\r\n * Can be convenient in some cases. Call toString() for full output, or cast to this class\r\n * and call getMessages() to do something with it yourself.\r\n */\r\nexport class MessageBufferLoggerImpl extends AbstractLogger {\r\n\r\n  private messages: string[] = [];\r\n\r\n  constructor(name: string, logGroupRuntimeSettings: LogGroupRuntimeSettings) {\r\n    super(name, logGroupRuntimeSettings);\r\n  }\r\n\r\n  public close(): void {\r\n    this.messages = [];\r\n    super.close();\r\n  }\r\n\r\n  public getMessages(): string[] {\r\n    return this.messages;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.messages.map((msg) => {\r\n      return msg;\r\n    }).join(\"\\n\");\r\n  }\r\n\r\n  protected doLog(message: LogMessage): void {\r\n    const messageFormatter = this._getMessageFormatter();\r\n    let fullMsg: string;\r\n    if (messageFormatter === null) {\r\n      fullMsg = this.createDefaultLogMessage(message);\r\n    }\r\n    else {\r\n      fullMsg = messageFormatter(message);\r\n    }\r\n    this.messages.push(fullMsg);\r\n  }\r\n}\r\n","import {Logger} from \"./Logger\";\r\nimport {LogGroupRule} from \"./LogGroupRule\";\r\nimport {DateFormat, LogFormat, LoggerType, LogLevel} from \"../LoggerOptions\";\r\nimport {LogMessage} from \"./AbstractLogger\";\r\n\r\n/**\r\n * Represents the runtime settings for a LogGroup (LogGroupRule).\r\n */\r\nexport class LogGroupRuntimeSettings {\r\n\r\n  // Store the original\r\n  private _logGroupRule: LogGroupRule;\r\n\r\n  // Store current runtime\r\n  private _level: LogLevel;\r\n  private _loggerType: LoggerType;\r\n  private _logFormat: LogFormat;\r\n  private _callBackLogger: ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null;\r\n  private _formatterLogMessage: ((message: LogMessage) => string) | null = null;\r\n\r\n  constructor(logGroupRule: LogGroupRule) {\r\n    this._logGroupRule = logGroupRule;\r\n    this._level = logGroupRule.level;\r\n    this._loggerType = logGroupRule.loggerType;\r\n    this._logFormat = new LogFormat(new DateFormat(logGroupRule.logFormat.dateFormat.formatEnum, logGroupRule.logFormat.dateFormat.dateSeparator),\r\n      logGroupRule.logFormat.showTimeStamp, logGroupRule.logFormat.showLoggerName);\r\n    this._callBackLogger = logGroupRule.callBackLogger;\r\n    this._formatterLogMessage = logGroupRule.formatterLogMessage;\r\n  }\r\n\r\n  /**\r\n   * Returns original LogGroupRule (so not runtime settings!)\r\n   * @return {LogGroupRule}\r\n   */\r\n  get logGroupRule(): LogGroupRule {\r\n    return this._logGroupRule;\r\n  }\r\n\r\n  get level(): LogLevel {\r\n    return this._level;\r\n  }\r\n\r\n  set level(value: LogLevel) {\r\n    this._level = value;\r\n  }\r\n\r\n  get loggerType(): LoggerType {\r\n    return this._loggerType;\r\n  }\r\n\r\n  set loggerType(value: LoggerType) {\r\n    this._loggerType = value;\r\n  }\r\n\r\n  get logFormat(): LogFormat {\r\n    return this._logFormat;\r\n  }\r\n\r\n  set logFormat(value: LogFormat) {\r\n    this._logFormat = value;\r\n  }\r\n\r\n  get callBackLogger(): ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null {\r\n    return this._callBackLogger;\r\n  }\r\n\r\n  set callBackLogger(value: ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null) {\r\n    this._callBackLogger = value;\r\n  }\r\n\r\n  get formatterLogMessage(): ((message: LogMessage) => string) | null {\r\n    return this._formatterLogMessage;\r\n  }\r\n\r\n  set formatterLogMessage(value: ((message: LogMessage) => string) | null) {\r\n    this._formatterLogMessage = value;\r\n  }\r\n}\r\n","import {SimpleMap} from \"../../utils/DataStructures\";\r\nimport {LoggerType} from \"../LoggerOptions\";\r\nimport {Logger} from \"./Logger\";\r\nimport {LoggerFactory} from \"./LoggerFactory\";\r\nimport {LoggerFactoryRuntimeSettings} from \"./LoggerFactoryRuntimeSettings\";\r\nimport {ConsoleLoggerImpl} from \"./ConsoleLoggerImpl\";\r\nimport {MessageBufferLoggerImpl} from \"./MessageBufferLoggerImpl\";\r\nimport {AbstractLogger} from \"./AbstractLogger\";\r\nimport {LoggerFactoryOptions} from \"./LoggerFactoryOptions\";\r\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\r\n\r\nexport class LoggerFactoryImpl implements LoggerFactory, LoggerFactoryRuntimeSettings {\r\n\r\n  private _name: string;\r\n\r\n  // Initialized by constructor by calling this.configure(..)\r\n  private _options!: LoggerFactoryOptions;\r\n  private _loggers: SimpleMap<Logger> = new SimpleMap<Logger>();\r\n\r\n  private _logGroupRuntimeSettingsIndexed: LogGroupRuntimeSettings[] = [];\r\n  private _loggerToLogGroupSettings: SimpleMap<LogGroupRuntimeSettings> = new SimpleMap<LogGroupRuntimeSettings>();\r\n\r\n  constructor(name: string, options: LoggerFactoryOptions) {\r\n    this._name = name;\r\n    this.configure(options);\r\n  }\r\n\r\n  public configure(options: LoggerFactoryOptions): void {\r\n    this._options = options;\r\n\r\n    // Close any current open loggers.\r\n    this.closeLoggers();\r\n    this._loggerToLogGroupSettings.clear();\r\n    this._logGroupRuntimeSettingsIndexed = [];\r\n\r\n    const logGroupRules = this._options.logGroupRules;\r\n    /* tslint:disable:prefer-for-of */\r\n    for (let i = 0; i < logGroupRules.length; i++) {\r\n      this._logGroupRuntimeSettingsIndexed.push(new LogGroupRuntimeSettings(logGroupRules[i]));\r\n    }\r\n    /* tslint:enable:prefer-for-of */\r\n  }\r\n\r\n  public getLogger(named: string): Logger {\r\n    if (!this._options.enabled) {\r\n      throw new Error(\"LoggerFactory is not enabled, please check your options passed in\");\r\n    }\r\n\r\n    let logger = this._loggers.get(named);\r\n    if (typeof logger !== \"undefined\") {\r\n      return logger;\r\n    }\r\n\r\n    // Initialize logger with appropriate level\r\n    logger = this.loadLogger(named);\r\n    this._loggers.put(named, logger);\r\n    return logger;\r\n  }\r\n\r\n  public isEnabled(): boolean {\r\n    return this._options.enabled;\r\n  }\r\n\r\n  public closeLoggers(): void {\r\n    this._loggers.forEachValue((logger) => {\r\n      // We can only close if AbstractLogger is used (our loggers, but user loggers may not extend it, even though unlikely).\r\n      if (logger instanceof AbstractLogger) {\r\n        logger.close();\r\n      }\r\n    });\r\n    this._loggers.clear();\r\n  }\r\n\r\n  public getName(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public getLogGroupRuntimeSettingsByIndex(idx: number): LogGroupRuntimeSettings | null {\r\n    if (idx >= 0 && idx < this._logGroupRuntimeSettingsIndexed.length) {\r\n      return this._logGroupRuntimeSettingsIndexed[idx];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getLogGroupRuntimeSettingsByLoggerName(nameLogger: string): LogGroupRuntimeSettings | null {\r\n    const result = this._loggerToLogGroupSettings.get(nameLogger);\r\n    if (typeof result === \"undefined\") {\r\n      return null;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public getLogGroupRuntimeSettings(): LogGroupRuntimeSettings[] {\r\n    return this._logGroupRuntimeSettingsIndexed.slice(0);\r\n  }\r\n\r\n  private loadLogger(named: string): Logger {\r\n    const logGroupRules = this._options.logGroupRules;\r\n\r\n    for (let i = 0; i < logGroupRules.length; i++) {\r\n      const logGroupRule = logGroupRules[i];\r\n      if (logGroupRule.regExp.test(named)) {\r\n        const logGroupRuntimeSettings = this._logGroupRuntimeSettingsIndexed[i];\r\n\r\n        let logger: Logger;\r\n        switch (logGroupRule.loggerType) {\r\n          case LoggerType.Console:\r\n            logger = new ConsoleLoggerImpl(named, logGroupRuntimeSettings);\r\n            break;\r\n          case LoggerType.MessageBuffer:\r\n            logger = new MessageBufferLoggerImpl(named, logGroupRuntimeSettings);\r\n            break;\r\n          case LoggerType.Custom:\r\n            if (logGroupRule.callBackLogger != null) {\r\n              logger = logGroupRule.callBackLogger(named, logGroupRuntimeSettings);\r\n            }\r\n            else {\r\n              throw new Error(\"Cannot create a custom logger, custom callback is null\");\r\n            }\r\n            break;\r\n          default:\r\n            throw new Error(\"Cannot create a Logger for LoggerType: \" + logGroupRule.loggerType);\r\n        }\r\n\r\n        // For a new logger map it by its name\r\n        this._loggerToLogGroupSettings.put(named, logGroupRuntimeSettings);\r\n        return logger;\r\n      }\r\n    }\r\n    throw new Error(\"Failed to find a match to create a Logger for: \" + named);\r\n  }\r\n\r\n}\r\n","import {LinkedList} from \"../../utils/DataStructures\";\r\nimport {MessageFormatUtils} from \"../../utils/MessageUtils\";\r\nimport {LogData} from \"../LogData\";\r\nimport {CategoryLogFormat, LogLevel} from \"../LoggerOptions\";\r\nimport {ErrorType, MessageType} from \"../standard/Logger\";\r\nimport {CategoryLogger} from \"./CategoryLogger\";\r\nimport {Category} from \"./Category\";\r\nimport {RuntimeSettings} from \"./RuntimeSettings\";\r\n\r\n/**\r\n * Contains information about a single log message.\r\n */\r\nexport interface CategoryLogMessage {\r\n\r\n  readonly message: string | LogData;\r\n\r\n  /**\r\n   * Returns the resolved stack (based on error).\r\n   * Available only when error is present.\r\n   */\r\n  readonly errorAsStack: string | null;\r\n\r\n  readonly error: Error | null;\r\n\r\n  readonly categories: Category[];\r\n\r\n  readonly date: Date;\r\n\r\n  readonly level: LogLevel;\r\n\r\n  readonly logFormat: CategoryLogFormat;\r\n\r\n  readonly isResolvedErrorMessage: boolean;\r\n\r\n  /**\r\n   * True if message represents LogData (false for a string message).\r\n   */\r\n  readonly isMessageLogData: boolean;\r\n\r\n  /**\r\n   * Always retrieves the message, from either the string directly\r\n   * or in case of LogData from LogData itself.\r\n   */\r\n  readonly messageAsString: string;\r\n\r\n  /**\r\n   * If present returns LogData, otherwise null.\r\n   */\r\n  readonly logData: LogData | null;\r\n}\r\n\r\nclass CategoryLogMessageImpl implements CategoryLogMessage {\r\n\r\n  private _message: string | LogData;\r\n  private _error: Error | null;\r\n  private _categories: Category[];\r\n  private _date: Date;\r\n  private _level: LogLevel;\r\n  private _logFormat: CategoryLogFormat;\r\n  private _ready: boolean;\r\n\r\n  private _resolvedErrorMessage: boolean = false;\r\n  private _errorAsStack: string | null = null;\r\n\r\n  constructor(message: string | LogData, error: Error | null, categories: Category[], date: Date, level: LogLevel, logFormat: CategoryLogFormat, ready: boolean) {\r\n    this._message = message;\r\n    this._error = error;\r\n    this._categories = categories;\r\n    this._date = date;\r\n    this._level = level;\r\n    this._logFormat = logFormat;\r\n    this._ready = ready;\r\n  }\r\n\r\n  get message(): string | LogData {\r\n    return this._message;\r\n  }\r\n\r\n  get error(): Error | null {\r\n    return this._error;\r\n  }\r\n\r\n  get categories(): Category[] {\r\n    return this._categories;\r\n  }\r\n\r\n  get date(): Date {\r\n    return this._date;\r\n  }\r\n\r\n  get level(): LogLevel {\r\n    return this._level;\r\n  }\r\n\r\n  get logFormat(): CategoryLogFormat {\r\n    return this._logFormat;\r\n  }\r\n\r\n  get isMessageLogData(): boolean {\r\n    return typeof(this._message) !== \"string\";\r\n  }\r\n\r\n  get messageAsString(): string {\r\n    if (typeof(this._message) === \"string\") {\r\n      return this._message;\r\n    }\r\n    return this._message.msg;\r\n  }\r\n\r\n  get logData(): LogData | null {\r\n    let result: LogData | null = null;\r\n    if (typeof(this._message) !== \"string\") {\r\n      result = this.message as LogData;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get isResolvedErrorMessage(): boolean {\r\n    return this._resolvedErrorMessage;\r\n  }\r\n\r\n  get errorAsStack(): string | null {\r\n    return this._errorAsStack;\r\n  }\r\n\r\n  set errorAsStack(stack: string | null) {\r\n    this._errorAsStack = stack;\r\n  }\r\n\r\n  public isReady(): boolean {\r\n    return this._ready;\r\n  }\r\n\r\n  public setReady(value: boolean): void {\r\n    this._ready = value;\r\n  }\r\n\r\n  get resolvedErrorMessage(): boolean {\r\n    return this._resolvedErrorMessage;\r\n  }\r\n\r\n  set resolvedErrorMessage(value: boolean) {\r\n    this._resolvedErrorMessage = value;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Abstract category logger, use as your base class for new type of loggers (it\r\n * saves you a lot of work) and override doLog(CategoryLogMessage). The message argument\r\n * provides full access to anything related to the logging event.\r\n * If you just want the standard line of logging, call: this.createDefaultLogMessage(msg) on\r\n * this class which will return you the formatted log message as string (e.g. the\r\n * default loggers all use this).\r\n */\r\nexport abstract class AbstractCategoryLogger implements CategoryLogger {\r\n\r\n  private rootCategory: Category;\r\n  private runtimeSettings: RuntimeSettings;\r\n\r\n  private allMessages: LinkedList<CategoryLogMessageImpl> = new LinkedList<CategoryLogMessageImpl>();\r\n\r\n  constructor(rootCategory: Category, runtimeSettings: RuntimeSettings) {\r\n    this.rootCategory = rootCategory;\r\n    this.runtimeSettings = runtimeSettings;\r\n  }\r\n\r\n  public finest(msg: MessageType, ...categories: Category[]): void {\r\n    this._log(LogLevel.Finest, msg, null, false, ...categories);\r\n  }\r\n\r\n  public finer(msg: MessageType, ...categories: Category[]): void {\r\n    this._log(LogLevel.Finer, msg, null, false, ...categories);\r\n  }\r\n\r\n  public fine(msg: MessageType, ...categories: Category[]): void {\r\n    this._log(LogLevel.Fine, msg, null, false, ...categories);\r\n  }\r\n\r\n  public config(msg: MessageType, ...categories: Category[]): void {\r\n    this._log(LogLevel.Config, msg, null, false, ...categories);\r\n  }\r\n\r\n  public info(msg: MessageType, ...categories: Category[]): void {\r\n    this._log(LogLevel.Info, msg, null, false, ...categories);\r\n  }\r\n\r\n  public warning(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\r\n    this._log(LogLevel.Warning, msg, error, false, ...categories);\r\n  }\r\n\r\n  public severe(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\r\n    this._log(LogLevel.Severe, msg, error, false, ...categories);\r\n  }\r\n\r\n  public resolved(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\r\n    this._log(LogLevel.Severe, msg, error, true, ...categories);\r\n  }\r\n\r\n  public log(level: LogLevel, msg: MessageType, error: ErrorType, ...categories: Category[]): void {\r\n    this._log(level, msg, error, false, ...categories);\r\n  }\r\n\r\n  protected getRootCategory(): Category {\r\n    return this.rootCategory;\r\n  }\r\n\r\n  /**\r\n   * Implement this method in your custom logger\r\n   * @param msg Message\r\n   */\r\n  protected abstract doLog(msg: CategoryLogMessage): void;\r\n\r\n  protected createDefaultLogMessage(msg: CategoryLogMessage): string {\r\n    return MessageFormatUtils.renderDefaultMessage(msg, true);\r\n  }\r\n\r\n  /**\r\n   * Return optional message formatter. All LoggerTypes (except custom) will see if\r\n   * they have this, and if so use it to log.\r\n   * @returns {((message:CategoryLogMessage)=>string)|null}\r\n   */\r\n  protected _getMessageFormatter(): ((message: CategoryLogMessage) => string) | null {\r\n    const categorySettings = this.runtimeSettings.getCategorySettings(this.rootCategory);\r\n    // Should not happen but make ts happy\r\n    if (categorySettings === null) {\r\n      throw new Error(\"Did not find CategorySettings for rootCategory: \" + this.rootCategory.name);\r\n    }\r\n    return categorySettings.formatterLogMessage;\r\n  }\r\n\r\n  private _log(level: LogLevel, msg: MessageType, error: ErrorType = null, resolved: boolean = false, ...categories: Category[]): void {\r\n    // this._logInternal(level, () => msg, () => error, resolved, ...categories);\r\n    const functionMessage = (): string | LogData => {\r\n      if (typeof msg === \"function\") {\r\n        return msg();\r\n      }\r\n      return msg;\r\n    };\r\n    const functionError = (): Error | null => {\r\n      if (typeof error === \"function\") {\r\n        return error();\r\n      }\r\n      return error;\r\n    };\r\n    this._logInternal(level, functionMessage, functionError, resolved, ...categories);\r\n  }\r\n\r\n  private _logInternal(level: LogLevel, msg: () => string | LogData, error: () => Error | null, resolved: boolean, ...categories: Category[]): void {\r\n    let logCategories: Category[] = [this.rootCategory];\r\n\r\n    // Log root category by default if none present\r\n    if (typeof categories !== \"undefined\" && categories.length > 0) {\r\n      logCategories = logCategories.concat(categories.filter((c) => c !== this.rootCategory));\r\n    }\r\n\r\n    // Get the runtime levels for given categories. If their level is lower than given level, we log.\r\n    // In addition we pass along which category/categories we log this statement for.\r\n    for (let i = 0; i < logCategories.length; i++) {\r\n      const category = logCategories[i];\r\n      if (category === null) {\r\n        throw new Error(\"Cannot have a null element within categories, at index=\" + i);\r\n      }\r\n      const settings = this.runtimeSettings.getCategorySettings(category);\r\n      if (settings === null) {\r\n        throw new Error(\"Category with path: \" + category.getCategoryPath() + \" is not registered with this logger, maybe \" +\r\n          \"you registered it with a different root logger?\");\r\n      }\r\n\r\n      if (settings.logLevel <= level) {\r\n        const actualError = error !== null ? error() : null;\r\n        if (actualError === null) {\r\n          const logMessage = new CategoryLogMessageImpl(msg(), actualError, logCategories, new Date(), level, settings.logFormat, true);\r\n          logMessage.resolvedErrorMessage = resolved;\r\n          this.allMessages.addTail(logMessage);\r\n          this.processMessages();\r\n        }\r\n        else {\r\n          const logMessage = new CategoryLogMessageImpl(msg(), actualError, logCategories, new Date(), level, settings.logFormat, false);\r\n          logMessage.resolvedErrorMessage = resolved;\r\n          this.allMessages.addTail(logMessage);\r\n          MessageFormatUtils.renderError(actualError).then((stack: string) => {\r\n            logMessage.errorAsStack = stack;\r\n            logMessage.setReady(true);\r\n            this.processMessages();\r\n          }).catch(() => {\r\n            logMessage.errorAsStack = \"<UNKNOWN> unable to get stack.\";\r\n            logMessage.setReady(true);\r\n            this.processMessages();\r\n          });\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  private processMessages(): void {\r\n    // Basically we wait until errors are resolved (those messages\r\n    // may not be ready).\r\n    const msgs = this.allMessages;\r\n    if (msgs.getSize() > 0) {\r\n      do {\r\n        const msg = msgs.getHead();\r\n        if (msg != null) {\r\n          if (!msg.isReady()) {\r\n            break;\r\n          }\r\n          msgs.removeHead();\r\n          this.doLog(msg);\r\n        }\r\n      }\r\n      while (msgs.getSize() > 0);\r\n    }\r\n  }\r\n\r\n}\r\n","import {LogLevel} from \"../LoggerOptions\";\r\nimport {AbstractCategoryLogger, CategoryLogMessage} from \"./AbstractCategoryLogger\";\r\nimport {Category} from \"./Category\";\r\nimport {RuntimeSettings} from \"./RuntimeSettings\";\r\n\r\n/**\r\n * Simple logger, that logs to the console. If the console is unavailable will throw an exception.\r\n */\r\nexport class CategoryConsoleLoggerImpl extends AbstractCategoryLogger {\r\n\r\n  constructor(rootCategory: Category, runtimeSettings: RuntimeSettings) {\r\n    super(rootCategory, runtimeSettings);\r\n  }\r\n\r\n  protected doLog(msg: CategoryLogMessage): void {\r\n    if (console !== undefined) {\r\n      const messageFormatter = this._getMessageFormatter();\r\n      let fullMsg: string;\r\n      if (messageFormatter === null) {\r\n        fullMsg = this.createDefaultLogMessage(msg);\r\n      }\r\n      else {\r\n        fullMsg = messageFormatter(msg);\r\n      }\r\n\r\n      let logged = false;\r\n\r\n      /* tslint:disable:no-console */\r\n      switch (msg.level) {\r\n        case LogLevel.Finest:\r\n          // Don't try trace we don't want stacks\r\n          break;\r\n        case LogLevel.Finer:\r\n          // Don't try trace we don't want stacks\r\n          break;\r\n        case LogLevel.Fine:\r\n          // Don't try, too much differences of consoles.\r\n          break;\r\n        case LogLevel.Info:\r\n        case LogLevel.Config:\r\n          if (console.info) {\r\n            console.info(\"CONFIG \" + fullMsg);\r\n            logged = true;\r\n          }\r\n          break;\r\n          if (console.info) {\r\n            console.info(fullMsg);\r\n            logged = true;\r\n          }\r\n          break;\r\n        case LogLevel.Warning:\r\n          if (console.warn) {\r\n            console.warn(fullMsg);\r\n            logged = true;\r\n          }\r\n          break;\r\n        case LogLevel.Severe:\r\n          if (console.error) {\r\n            console.error(fullMsg);\r\n            logged = true;\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(\"Unsupported level: \" + msg.level);\r\n      }\r\n\r\n      if (!logged) {\r\n        console.log(fullMsg);\r\n      }\r\n      /* tslint:enable:no-console */\r\n    }\r\n    else {\r\n      throw new Error(\"Console is not defined, cannot log msg: \" + msg.messageAsString);\r\n    }\r\n  }\r\n}\r\n","import {LogLevel} from \"../LoggerOptions\";\r\nimport {MessageType} from \"../standard/Logger\";\r\nimport {CategoryLogger} from \"./CategoryLogger\";\r\nimport {Category} from \"./Category\";\r\n\r\n/**\r\n * Delegate logger, delegates logging to given logger (constructor).\r\n */\r\nexport class CategoryDelegateLoggerImpl implements CategoryLogger {\r\n\r\n  private _delegate: CategoryLogger;\r\n\r\n  constructor(delegate: CategoryLogger) {\r\n    this._delegate = delegate;\r\n  }\r\n\r\n  get delegate(): CategoryLogger {\r\n    return this._delegate;\r\n  }\r\n\r\n  set delegate(value: CategoryLogger) {\r\n    this._delegate = value;\r\n  }\r\n\r\n  public finest(msg: MessageType, ...categories: Category[]): void {\r\n    this._delegate.finest(msg, ...categories);\r\n  }\r\n\r\n  public finer(msg: MessageType, ...categories: Category[]): void {\r\n    this._delegate.finer(msg, ...categories);\r\n  }\r\n\r\n  public fine(msg: MessageType, ...categories: Category[]): void {\r\n    this._delegate.fine(msg, ...categories);\r\n  }\r\n\r\n  public config(msg: MessageType, ...categories: Category[]): void {\r\n    this._delegate.config(msg, ...categories);\r\n  }\r\n\r\n  public info(msg: MessageType, ...categories: Category[]): void {\r\n    this._delegate.info(msg, ...categories);\r\n  }\r\n\r\n  public warning(msg: MessageType, error: Error, ...categories: Category[]): void {\r\n    this._delegate.warning(msg, error, ...categories);\r\n  }\r\n\r\n  public severe(msg: MessageType, error: Error, ...categories: Category[]): void {\r\n    this._delegate.severe(msg, error, ...categories);\r\n  }\r\n\r\n  public resolved(msg: MessageType, error: Error, ...categories: Category[]): void {\r\n    this._delegate.resolved(msg, error, ...categories);\r\n  }\r\n\r\n  public log(level: LogLevel, msg: MessageType, error: Error, ...categories: Category[]): void {\r\n    this._delegate.log(level, msg, error, ...categories);\r\n  }\r\n}\r\n","import {ExtensionHelper} from \"../../extension/ExtensionHelper\";\r\nimport {AbstractCategoryLogger, CategoryLogMessage} from \"./AbstractCategoryLogger\";\r\nimport {Category} from \"./Category\";\r\nimport {RuntimeSettings} from \"./RuntimeSettings\";\r\n\r\n/**\r\n * This class should not be used directly, it is used for communication with the extension only.\r\n */\r\nexport class CategoryExtensionLoggerImpl extends AbstractCategoryLogger {\r\n\r\n  constructor(rootCategory: Category, runtimeSettings: RuntimeSettings) {\r\n    super(rootCategory, runtimeSettings);\r\n  }\r\n\r\n  protected doLog(msg: CategoryLogMessage): void {\r\n    if (typeof window !== \"undefined\") {\r\n      ExtensionHelper.sendCategoryLogMessage(msg);\r\n    }\r\n    else {\r\n      /* tslint:disable:no-console */\r\n      console.log(\"window is not available, you must be running in a browser for this. Dropped message.\");\r\n      /* tslint:enable:no-console */\r\n    }\r\n  }\r\n\r\n}\r\n","import {AbstractCategoryLogger, CategoryLogMessage} from \"./AbstractCategoryLogger\";\r\n\r\n/**\r\n * Logger which buffers all messages, use with care due to possible high memory footprint.\r\n * Can be convenient in some cases. Call toString() for full output, or cast to this class\r\n * and call getMessages() to do something with it yourself.\r\n */\r\nexport class CategoryMessageBufferLoggerImpl extends AbstractCategoryLogger {\r\n\r\n  private messages: string[] = [];\r\n\r\n  public getMessages(): string[] {\r\n    return this.messages;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.messages.map((msg: string) => {\r\n      return msg;\r\n    }).join(\"\\n\");\r\n  }\r\n\r\n  protected doLog(msg: CategoryLogMessage): void {\r\n    const messageFormatter = this._getMessageFormatter();\r\n    let fullMsg: string;\r\n    if (messageFormatter === null) {\r\n      fullMsg = this.createDefaultLogMessage(msg);\r\n    }\r\n    else {\r\n      fullMsg = messageFormatter(msg);\r\n    }\r\n    this.messages.push(fullMsg);\r\n  }\r\n}\r\n","import {CategoryLogger} from \"./CategoryLogger\";\r\nimport {Category} from \"./Category\";\r\nimport {RuntimeSettings} from \"./RuntimeSettings\";\r\nimport {CategoryLogFormat, LoggerType, LogLevel} from \"../LoggerOptions\";\r\nimport {CategoryLogMessage} from \"./AbstractCategoryLogger\";\r\n\r\n/**\r\n * RuntimeSettings for a category, at runtime these are associated to a category.\r\n */\r\nexport class CategoryRuntimeSettings {\r\n\r\n  private _category: Category;\r\n  private _logLevel: LogLevel;\r\n  private _loggerType: LoggerType;\r\n  private _logFormat: CategoryLogFormat;\r\n\r\n  private _callBackLogger: ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null;\r\n  private _formatterLogMessage: ((message: CategoryLogMessage) => string) | null = null;\r\n\r\n  constructor(category: Category, logLevel: LogLevel = LogLevel.Warning, loggerType: LoggerType = LoggerType.Console,\r\n              logFormat: CategoryLogFormat = new CategoryLogFormat(),\r\n              callBackLogger: ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null = null,\r\n              formatterLogMessage: ((message: CategoryLogMessage) => string) | null = null) {\r\n    this._category = category;\r\n    this._logLevel = logLevel;\r\n    this._loggerType = loggerType;\r\n    this._logFormat = logFormat;\r\n    this._callBackLogger = callBackLogger;\r\n    this._formatterLogMessage = formatterLogMessage;\r\n  }\r\n\r\n  get category(): Category {\r\n    return this._category;\r\n  }\r\n\r\n  get logLevel(): LogLevel {\r\n    return this._logLevel;\r\n  }\r\n\r\n  set logLevel(value: LogLevel) {\r\n    this._logLevel = value;\r\n  }\r\n\r\n  get loggerType(): LoggerType {\r\n    return this._loggerType;\r\n  }\r\n\r\n  set loggerType(value: LoggerType) {\r\n    this._loggerType = value;\r\n  }\r\n\r\n  get logFormat(): CategoryLogFormat {\r\n    return this._logFormat;\r\n  }\r\n\r\n  set logFormat(value: CategoryLogFormat) {\r\n    this._logFormat = value;\r\n  }\r\n\r\n  get callBackLogger(): ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null {\r\n    return this._callBackLogger;\r\n  }\r\n\r\n  set callBackLogger(value: ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null) {\r\n    this._callBackLogger = value;\r\n  }\r\n\r\n  get formatterLogMessage(): ((message: CategoryLogMessage) => string) | null {\r\n    return this._formatterLogMessage;\r\n  }\r\n\r\n  set formatterLogMessage(value: ((message: CategoryLogMessage) => string) | null) {\r\n    this._formatterLogMessage = value;\r\n  }\r\n}\r\n","import {CategoryLogger} from \"./CategoryLogger\";\r\nimport {Category} from \"./Category\";\r\nimport {RuntimeSettings} from \"./RuntimeSettings\";\r\nimport {CategoryLogFormat, LoggerType, LogLevel} from \"../LoggerOptions\";\r\nimport {CategoryLogMessage} from \"./AbstractCategoryLogger\";\r\n\r\n/**\r\n * Default configuration, can be used to initially set a different default configuration\r\n * on the CategoryServiceFactory. This will be applied to all categories already registered (or\r\n * registered in the future). Can also be applied to one Category (and childs).\r\n */\r\nexport class CategoryConfiguration {\r\n\r\n  private _logLevel: LogLevel;\r\n  private _loggerType: LoggerType;\r\n  private _logFormat: CategoryLogFormat;\r\n\r\n  private _callBackLogger: ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null;\r\n  private _formatterLogMessage: ((message: CategoryLogMessage) => string) | null = null;\r\n\r\n  /**\r\n   * Create a new instance\r\n   * @param logLevel Log level for all loggers, default is LogLevel.Warning\r\n   * @param loggerType Where to log, default is LoggerType.Console\r\n   * @param logFormat What logging format to use, use default instance, for default values see CategoryLogFormat.\r\n   * @param callBackLogger Optional callback, if LoggerType.Custom is used as loggerType. In that case must return a new Logger instance.\r\n   *            It is recommended to extend AbstractCategoryLogger to make your custom logger.\r\n   */\r\n  constructor(logLevel: LogLevel = LogLevel.Warning, loggerType: LoggerType = LoggerType.Console,\r\n              logFormat: CategoryLogFormat = new CategoryLogFormat(),\r\n              callBackLogger: ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null = null) {\r\n    this._logLevel = logLevel;\r\n    this._loggerType = loggerType;\r\n    this._logFormat = logFormat;\r\n    this._callBackLogger = callBackLogger;\r\n\r\n    if (this._loggerType === LoggerType.Custom && this.callBackLogger === null) {\r\n      throw new Error(\"If you specify loggerType to be Custom, you must provide the callBackLogger argument\");\r\n    }\r\n  }\r\n\r\n  get logLevel(): LogLevel {\r\n    return this._logLevel;\r\n  }\r\n\r\n  get loggerType(): LoggerType {\r\n    return this._loggerType;\r\n  }\r\n\r\n  get logFormat(): CategoryLogFormat {\r\n    return this._logFormat;\r\n  }\r\n\r\n  get callBackLogger(): ((rootCategory: Category, runtimeSettings: RuntimeSettings) => CategoryLogger) | null {\r\n    return this._callBackLogger;\r\n  }\r\n\r\n  /**\r\n   * Get the formatterLogMessage function, see comment on the setter.\r\n   * @returns {((message:CategoryLogMessage)=>string)|null}\r\n   */\r\n  get formatterLogMessage(): ((message: CategoryLogMessage) => string) | null {\r\n    return this._formatterLogMessage;\r\n  }\r\n\r\n  /**\r\n   * Set the default formatterLogMessage function, if set it is applied to all type of loggers except for a custom logger.\r\n   * By default this is null (not set). You can assign a function to allow custom formatting of a log message.\r\n   * Each log message will call this function then and expects your function to format the message and return a string.\r\n   * Will throw an error if you attempt to set a formatterLogMessage if the LoggerType is custom.\r\n   * @param value The formatter function, or null to reset it.\r\n   */\r\n  set formatterLogMessage(value: ((message: CategoryLogMessage) => string) | null) {\r\n    if (value !== null && this._loggerType === LoggerType.Custom) {\r\n      throw new Error(\"You cannot specify a formatter for log messages if your loggerType is Custom\");\r\n    }\r\n    this._formatterLogMessage = value;\r\n  }\r\n\r\n  public copy(): CategoryConfiguration {\r\n    const config = new CategoryConfiguration(this.logLevel, this.loggerType, this.logFormat.copy(), this.callBackLogger);\r\n    config.formatterLogMessage = this.formatterLogMessage;\r\n    return config;\r\n  }\r\n}\r\n","import {SimpleMap} from \"../../utils/DataStructures\";\r\nimport {LoggerType} from \"../LoggerOptions\";\r\nimport {CategoryConsoleLoggerImpl} from \"./CategoryConsoleLoggerImpl\";\r\nimport {CategoryDelegateLoggerImpl} from \"./CategoryDelegateLoggerImpl\";\r\nimport {CategoryExtensionLoggerImpl} from \"./CategoryExtensionLoggerImpl\";\r\nimport {CategoryMessageBufferLoggerImpl} from \"./CategoryMessageBufferImpl\";\r\nimport {ExtensionHelper} from \"../../extension/ExtensionHelper\";\r\nimport {Category} from \"./Category\";\r\nimport {CategoryLogger} from \"./CategoryLogger\";\r\nimport {RuntimeSettings} from \"./RuntimeSettings\";\r\nimport {CategoryRuntimeSettings} from \"./CategoryRuntimeSettings\";\r\nimport {CategoryConfiguration} from \"./CategoryConfiguration\";\r\n\r\n/**\r\n * The service (only available as singleton) for all category related stuff as\r\n * retrieving, registering a logger. You should normally NOT use this,\r\n * instead use CategoryServiceFactory which is meant for end users.\r\n */\r\nexport class CategoryServiceImpl implements RuntimeSettings {\r\n\r\n  // Singleton category service, used by CategoryServiceFactory as well as Categories.\r\n  // Loaded on demand. Do NOT change as webpack may pack things in wrong order otherwise.\r\n  private static _INSTANCE: CategoryServiceImpl | null = null;\r\n  private _defaultConfig: CategoryConfiguration = new CategoryConfiguration();\r\n\r\n  private _mapState = new SimpleMap<CategoryState>();\r\n\r\n  private constructor() {\r\n    // Private constructor\r\n    ExtensionHelper.register();\r\n  }\r\n\r\n  public static getInstance(): CategoryServiceImpl {\r\n    // Load on-demand, to assure webpack ordering of module usage doesn't screw things over\r\n    // for us when we accidentally change the order.\r\n    if (CategoryServiceImpl._INSTANCE === null) {\r\n      CategoryServiceImpl._INSTANCE = new CategoryServiceImpl();\r\n    }\r\n    return CategoryServiceImpl._INSTANCE;\r\n  }\r\n\r\n  public getLogger(category: Category): CategoryLogger {\r\n    return this.createOrGetCategoryState(category).logger;\r\n  }\r\n\r\n  /**\r\n   * Clears everything, including a default configuration you may have set.\r\n   * After this you need to re-register your categories etc.\r\n   */\r\n  public clear(): void {\r\n    this._mapState.clear();\r\n    this.setDefaultConfiguration(new CategoryConfiguration());\r\n  }\r\n\r\n  public getCategorySettings(category: Category): CategoryRuntimeSettings {\r\n    return this.createOrGetCategoryState(category).currentRuntimeSettings;\r\n  }\r\n\r\n  public getOriginalCategorySettings(category: Category): CategoryRuntimeSettings {\r\n    return this.createOrGetCategoryState(category).originalRuntimeSettings;\r\n  }\r\n\r\n  /**\r\n   * Set the default configuration. New root loggers created get this\r\n   * applied. If you want to reset all current loggers to have this\r\n   * applied as well, pass in reset=true (the default is false). All\r\n   * categories will be reset then as well.\r\n   * @param config New config\r\n   * @param reset Defaults to true. Set to true to reset all loggers and current runtimesettings.\r\n   */\r\n  public setDefaultConfiguration(config: CategoryConfiguration, reset: boolean = true): void {\r\n    this._defaultConfig = config;\r\n    if (reset) {\r\n      this._mapState.forEachValue((state) => {\r\n        state.updateSettings(config);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set new configuration settings for a category (and possibly its child categories)\r\n   * @param config Config\r\n   * @param category Category\r\n   * @param applyChildren True to apply to child categories, defaults to false.\r\n   */\r\n  public setConfigurationCategory(config: CategoryConfiguration, category: Category, applyChildren: boolean = false): void {\r\n    this.createOrGetCategoryState(category).updateSettings(config);\r\n\r\n    // Apply the settings to children recursive if requested\r\n    if (applyChildren) {\r\n      category.children.forEach((child) => {\r\n        // False flag, a child cannot reset a rootlogger\r\n        this.setConfigurationCategory(config, child, applyChildren);\r\n      });\r\n    }\r\n  }\r\n\r\n  public registerCategory(category: Category): void {\r\n    if (category === null || typeof category === \"undefined\") {\r\n      throw new Error(\"Category CANNOT be null/undefined\");\r\n    }\r\n\r\n    if (this._mapState.exists(CategoryServiceImpl.getCategoryKey(category))) {\r\n      throw new Error(\"Cannot add this root category with name: \" + category.name + \", it already exists (same name in hierarchy).\");\r\n    }\r\n\r\n    this.createOrGetCategoryState(category);\r\n  }\r\n\r\n  /**\r\n   * Used to enable integration with chrome extension. Do not use manually, the\r\n   * extension and the logger framework deal with this.\r\n   */\r\n  public enableExtensionIntegration(): void {\r\n    this._mapState.forEachValue((state) => state.enableForExtension(this));\r\n  }\r\n\r\n  /**\r\n   * Return all root categories currently registered.\r\n   */\r\n  public getRootCategories(): Category[] {\r\n    return this._mapState.values().filter((state) => state.category.parent == null).map((state) => state.category);\r\n  }\r\n\r\n  /**\r\n   * Return Category by id\r\n   * @param id The id of the category to find\r\n   * @returns {Category} or null if not found\r\n   */\r\n  public getCategoryById(id: number): Category | null {\r\n    const result = this._mapState.values().filter((state) => state.category.id === id).map((state) => state.category);\r\n    if (result.length === 1) {\r\n      return result[0];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private createOrGetCategoryState(category: Category): CategoryState {\r\n    const key = CategoryServiceImpl.getCategoryKey(category);\r\n    const state = this._mapState.get(key);\r\n    if (typeof state !== \"undefined\") {\r\n      return state;\r\n    }\r\n\r\n    const newState = this.createState(category);\r\n    this._mapState.put(key, newState);\r\n    return newState;\r\n  }\r\n\r\n  private createState(category: Category): CategoryState {\r\n    return new CategoryState(category, () => this._defaultConfig, (config: CategoryConfiguration, cat: Category) => this.createLogger(config, cat));\r\n  }\r\n\r\n  private createLogger(config: CategoryConfiguration, category: Category): CategoryLogger {\r\n    // Default is always a console logger\r\n    switch (config.loggerType) {\r\n      case LoggerType.Console:\r\n        return new CategoryConsoleLoggerImpl(category, this);\r\n      case LoggerType.MessageBuffer:\r\n        return new CategoryMessageBufferLoggerImpl(category, this);\r\n      case LoggerType.Custom:\r\n        if (config.callBackLogger === null) {\r\n          throw new Error(\"Cannot create custom logger, custom callback is null\");\r\n        }\r\n        else {\r\n          return config.callBackLogger(category, this);\r\n        }\r\n      default:\r\n        throw new Error(\"Cannot create a Logger for LoggerType: \" + config.loggerType);\r\n    }\r\n  }\r\n\r\n  private static getCategoryKey(category: Category): string {\r\n    return category.getCategoryPath();\r\n  }\r\n}\r\n\r\nclass CategoryState {\r\n\r\n  private readonly _category: Category;\r\n  private readonly _lazyState: LazyState;\r\n\r\n  constructor(category: Category, defaultConfig: () => CategoryConfiguration, createLogger: (config: CategoryConfiguration, category: Category) => CategoryLogger) {\r\n    this._category = category;\r\n    this._lazyState = new LazyState(category, defaultConfig, createLogger);\r\n  }\r\n\r\n  get category(): Category {\r\n    return this._category;\r\n  }\r\n\r\n  get logger(): CategoryLogger {\r\n    return this._lazyState.getLogger();\r\n  }\r\n\r\n  get originalRuntimeSettings(): CategoryRuntimeSettings {\r\n    return this._lazyState.getOriginalRuntimeSettings();\r\n  }\r\n\r\n  get currentRuntimeSettings(): CategoryRuntimeSettings {\r\n    return this._lazyState.getCurrentRuntimeSettings();\r\n  }\r\n\r\n  public enableForExtension(runtimeSettings: RuntimeSettings) {\r\n    this._lazyState.enableForExtension(runtimeSettings);\r\n  }\r\n\r\n  public updateSettings(config: CategoryConfiguration) {\r\n    this._lazyState.updateSettings(config);\r\n  }\r\n}\r\n\r\nclass LazyState {\r\n\r\n  private readonly _category: Category;\r\n  private _defaultConfig: () => CategoryConfiguration;\r\n  private readonly _createLogger: (config: CategoryConfiguration, category: Category) => CategoryLogger;\r\n\r\n  private _logger!: CategoryLogger; // Original real logger\r\n  private _wrappedLogger!: CategoryLogger;  // Wrapped logger, initially _logger - can be changed if extension is enabled.\r\n  private _delegateLogger!: CategoryDelegateLoggerImpl;\r\n\r\n  private _originalRuntimeSettings!: CategoryRuntimeSettings;\r\n  private _currentRuntimeSettings!: CategoryRuntimeSettings;\r\n\r\n  constructor(category: Category, defaultConfig: () => CategoryConfiguration, createLogger: (config: CategoryConfiguration, category: Category) => CategoryLogger) {\r\n    this._category = category;\r\n    this._defaultConfig = defaultConfig;\r\n    this._createLogger = createLogger;\r\n  }\r\n\r\n  public isLoaded(): boolean {\r\n    return (typeof this._logger !== \"undefined\");\r\n  }\r\n\r\n  public getLogger(): CategoryLogger {\r\n    this.loadLoggerOnDemand();\r\n    return this._delegateLogger;\r\n  }\r\n\r\n  public getOriginalRuntimeSettings(): CategoryRuntimeSettings {\r\n    this.loadLoggerOnDemand();\r\n    return this._originalRuntimeSettings;\r\n  }\r\n\r\n  public getCurrentRuntimeSettings(): CategoryRuntimeSettings {\r\n    this.loadLoggerOnDemand();\r\n    return this._currentRuntimeSettings;\r\n  }\r\n\r\n  public enableForExtension(runtimeSettings: RuntimeSettings) {\r\n    this.loadLoggerOnDemand();\r\n    if (!(this._wrappedLogger instanceof CategoryExtensionLoggerImpl)) {\r\n      /* tslint:disable no-console */\r\n      console.log(\"Reconfiguring logger for extension for category: \" + this._category.name);\r\n      /* tslint:enable no-console */\r\n\r\n      this._wrappedLogger = new CategoryExtensionLoggerImpl(this._category, runtimeSettings);\r\n      this._delegateLogger.delegate = this._wrappedLogger;\r\n    }\r\n  }\r\n\r\n  public updateSettings(config: CategoryConfiguration) {\r\n    if (this.isLoaded()) {\r\n      this._currentRuntimeSettings.logLevel = config.logLevel;\r\n      this._currentRuntimeSettings.loggerType = config.loggerType;\r\n      this._currentRuntimeSettings.logFormat = config.logFormat;\r\n      this._currentRuntimeSettings.callBackLogger = config.callBackLogger;\r\n      this._currentRuntimeSettings.formatterLogMessage = config.formatterLogMessage;\r\n\r\n      // Replace the real logger, it may have changed.\r\n      this._logger = this._createLogger(config, this._category);\r\n      if (!(this._wrappedLogger instanceof CategoryExtensionLoggerImpl)) {\r\n        this._wrappedLogger = this._logger;\r\n      }\r\n      this._delegateLogger.delegate = this._wrappedLogger;\r\n    }\r\n    else {\r\n      // Set this config, it may be for the category specific, the default is therefore not good enough.\r\n      this._defaultConfig = () => config;\r\n    }\r\n  }\r\n\r\n  private loadLoggerOnDemand(): void {\r\n    if (!this.isLoaded()) {\r\n      this._logger = this._createLogger(this._defaultConfig(), this._category);\r\n      this._wrappedLogger = this._logger;\r\n      this._delegateLogger = new CategoryDelegateLoggerImpl(this._wrappedLogger);\r\n      this._originalRuntimeSettings = this.initNewSettings();\r\n      this._currentRuntimeSettings = this.initNewSettings();\r\n    }\r\n  }\r\n\r\n  private initNewSettings(): CategoryRuntimeSettings {\r\n    const defSettings = this._defaultConfig().copy();\r\n    return new CategoryRuntimeSettings(this._category, defSettings.logLevel, defSettings.loggerType, defSettings.logFormat, defSettings.callBackLogger, defSettings.formatterLogMessage);\r\n  }\r\n}\r\n","import {CategoryLogMessage} from \"../log/category/AbstractCategoryLogger\";\r\nimport {CategoryServiceImpl} from \"../log/category/CategoryService\";\r\nimport {LogLevel} from \"../log/LoggerOptions\";\r\nimport {MessageFormatUtils} from \"../utils/MessageUtils\";\r\nimport {ExtensionMessageContentJSON, ExtensionMessageJSON} from \"./ExtensionMessageJSON\";\r\nimport {ExtensionRequestChangeLogLevelJSON} from \"./MessagesFromExtensionJSON\";\r\nimport {\r\n  ExtensionCategoriesUpdateMessageJSON,\r\n  ExtensionCategoryJSON,\r\n  ExtensionCategoryLogMessageJSON,\r\n} from \"./MessagesToExtensionJSON\";\r\nimport {Category} from \"../log/category/Category\";\r\n\r\nexport class ExtensionHelper {\r\n\r\n  private static registered: boolean = false;\r\n\r\n  private constructor() {\r\n    // Private constructor\r\n  }\r\n\r\n  /**\r\n   * Enables the window event listener to listen to messages (from extensions).\r\n   * Can be registered/enabled only once.\r\n   */\r\n  public static register(): void {\r\n    if (!ExtensionHelper.registered) {\r\n      const listener = (evt: MessageEvent) => {\r\n        const msg = evt.data as ExtensionMessageJSON<any>;\r\n        if (msg !== null) {\r\n          ExtensionHelper.processMessageFromExtension(msg);\r\n        }\r\n      };\r\n\r\n      if (typeof window !== \"undefined\" && typeof window.removeEventListener !== \"undefined\" && typeof window.addEventListener !== \"undefined\") {\r\n        window.removeEventListener(\"message\", listener);\r\n        window.addEventListener(\"message\", listener);\r\n\r\n        ExtensionHelper.registered = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public static processMessageFromExtension(msg: ExtensionMessageJSON<any>): void {\r\n    if (!ExtensionHelper.registered) {\r\n      return;\r\n    }\r\n    /* tslint:disable:no-console */\r\n    if (msg.from === \"tsl-extension\") {\r\n      const data = msg.data;\r\n      switch (data.type) {\r\n        case \"register\":\r\n          ExtensionHelper.enableExtensionIntegration();\r\n          break;\r\n        case \"request-change-loglevel\":\r\n          const valueRequest = data.value as ExtensionRequestChangeLogLevelJSON;\r\n          const catsApplied = ExtensionHelper.applyLogLevel(valueRequest.categoryId, valueRequest.logLevel, valueRequest.recursive);\r\n          if (catsApplied.length > 0) {\r\n            // Send changes back\r\n            ExtensionHelper.sendCategoriesRuntimeUpdateMessage(catsApplied);\r\n          }\r\n          break;\r\n        default:\r\n          console.log(\"Unknown command to process message from extension, command was: \" + data.type);\r\n          break;\r\n      }\r\n    }\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public static sendCategoryLogMessage(msg: CategoryLogMessage): void {\r\n    if (!ExtensionHelper.registered) {\r\n      return;\r\n    }\r\n\r\n    const categoryIds = msg.categories.map((cat: Category) => {\r\n      return cat.id;\r\n    });\r\n\r\n    const content = {\r\n      type: \"log-message\",\r\n      value: {\r\n        categories: categoryIds,\r\n        errorAsStack: msg.errorAsStack,\r\n        formattedMessage: MessageFormatUtils.renderDefaultMessage(msg, false),\r\n        logLevel: LogLevel[msg.level].toString(),\r\n        message: msg.messageAsString,\r\n        resolvedErrorMessage: msg.isResolvedErrorMessage\r\n      }\r\n    } as ExtensionMessageContentJSON<ExtensionCategoryLogMessageJSON>;\r\n\r\n    const message = {\r\n      data: content,\r\n      from: \"tsl-logging\",\r\n    } as ExtensionMessageJSON<ExtensionCategoryLogMessageJSON>;\r\n\r\n    ExtensionHelper.sendMessage(message);\r\n  }\r\n\r\n  private static sendCategoriesRuntimeUpdateMessage(categories: Category[]): void {\r\n    if (!ExtensionHelper.registered) {\r\n      return;\r\n    }\r\n    const service = CategoryServiceImpl.getInstance();\r\n    const catLevels = {categories: Array<{id: number, logLevel: string}>()} as ExtensionCategoriesUpdateMessageJSON;\r\n\r\n    categories.forEach((cat: Category) => {\r\n      const catSettings = service.getCategorySettings(cat);\r\n      if (catSettings != null) {\r\n        catLevels.categories.push({id: cat.id, logLevel: LogLevel[catSettings.logLevel].toString()});\r\n      }\r\n    });\r\n\r\n    const content = {\r\n      type: \"categories-rt-update\",\r\n      value: catLevels,\r\n    } as ExtensionMessageContentJSON<ExtensionCategoriesUpdateMessageJSON>;\r\n\r\n    const message = {\r\n      data: content,\r\n      from: \"tsl-logging\"\r\n    } as ExtensionMessageJSON<ExtensionCategoriesUpdateMessageJSON>;\r\n\r\n    ExtensionHelper.sendMessage(message);\r\n  }\r\n\r\n  private static sendRootCategoriesToExtension(): void {\r\n    if (!ExtensionHelper.registered) {\r\n      return;\r\n    }\r\n\r\n    const categories = CategoryServiceImpl.getInstance().getRootCategories().map((cat: Category) => {\r\n      return ExtensionHelper.getCategoryAsJSON(cat);\r\n    });\r\n\r\n    const content = {\r\n      type: \"root-categories-tree\",\r\n      value: categories\r\n    } as ExtensionMessageContentJSON<ExtensionCategoryJSON[]>;\r\n\r\n    const message = {\r\n      data: content,\r\n      from: \"tsl-logging\"\r\n    } as ExtensionMessageJSON<ExtensionCategoryJSON[]>;\r\n\r\n    ExtensionHelper.sendMessage(message);\r\n  }\r\n\r\n  /**\r\n   * If extension integration is enabled, will send the root categories over to the extension.\r\n   * Otherwise does nothing.\r\n   */\r\n  private static getCategoryAsJSON(cat: Category): ExtensionCategoryJSON {\r\n    const childCategories = cat.children.map((child) => {\r\n      return ExtensionHelper.getCategoryAsJSON(child);\r\n    });\r\n\r\n    return {\r\n      children: childCategories,\r\n      id: cat.id,\r\n      logLevel: LogLevel[cat.logLevel].toString(),\r\n      name: cat.name,\r\n      parentId: (cat.parent != null ? cat.parent.id : null),\r\n    } as ExtensionCategoryJSON;\r\n  }\r\n\r\n  private static applyLogLevel(categoryId: number, logLevel: string, recursive: boolean): Category[] {\r\n    const cats: Category[] = [];\r\n\r\n    const category = CategoryServiceImpl.getInstance().getCategoryById(categoryId);\r\n    if (category != null) {\r\n      ExtensionHelper._applyLogLevelRecursive(category, LogLevel.fromString(logLevel), recursive, cats);\r\n    }\r\n    else {\r\n      /* tslint:disable:no-console */\r\n      console.log(\"Could not change log level, failed to find category with id: \" + categoryId);\r\n      /* tslint:enable:no-console */\r\n    }\r\n\r\n    return cats;\r\n  }\r\n\r\n  private static _applyLogLevelRecursive(category: Category, logLevel: LogLevel, recursive: boolean, cats: Category[]): void {\r\n    const categorySettings = CategoryServiceImpl.getInstance().getCategorySettings(category);\r\n    if (categorySettings != null) {\r\n      categorySettings.logLevel = logLevel;\r\n\r\n      cats.push(category);\r\n\r\n      if (recursive) {\r\n        category.children.forEach((child: Category) => {\r\n          ExtensionHelper._applyLogLevelRecursive(child, logLevel, recursive, cats);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private static getAllCategories(): Category[] {\r\n    const cats: Category[] = [];\r\n\r\n    const addCats = (cat: Category, allCats: Category[]) => {\r\n      allCats.push(cat);\r\n\r\n      cat.children.forEach((catChild: Category) => {\r\n        addCats(catChild, allCats);\r\n      });\r\n    };\r\n\r\n    CategoryServiceImpl.getInstance().getRootCategories().forEach((cat: Category) => {\r\n      addCats(cat, cats);\r\n    });\r\n\r\n    return cats;\r\n  }\r\n\r\n  private static sendMessage(msg: ExtensionMessageJSON<any>): void {\r\n    if (!ExtensionHelper.registered) {\r\n      return;\r\n    }\r\n\r\n    if (typeof window !== \"undefined\" && typeof window.postMessage !== \"undefined\") {\r\n      window.postMessage(msg, \"*\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Extension framework will call this to enable the integration between two,\r\n   *  after this call the framework will respond with postMessage() messages.\r\n   */\r\n  private static enableExtensionIntegration(): void {\r\n    if (!ExtensionHelper.registered) {\r\n      return;\r\n    }\r\n\r\n    const instance = CategoryServiceImpl.getInstance();\r\n    instance.enableExtensionIntegration();\r\n\r\n    // Send over all categories\r\n    ExtensionHelper.sendRootCategoriesToExtension();\r\n\r\n    // Send over the current runtime levels\r\n    const cats = ExtensionHelper.getAllCategories();\r\n    ExtensionHelper.sendCategoriesRuntimeUpdateMessage(cats);\r\n  }\r\n}\r\n","import {Logger} from \"./Logger\";\r\nimport {LogFormat, LoggerType, LogLevel} from \"../LoggerOptions\";\r\nimport {LogMessage} from \"./AbstractLogger\";\r\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\r\n\r\n/**\r\n * Defines a LogGroupRule, this allows you to either have everything configured the same way\r\n * or for example loggers that start with name model. It allows you to group loggers together\r\n * to have a certain loglevel and other settings. You can configure this when creating the\r\n * LoggerFactory (which accepts multiple LogGroupRules).\r\n */\r\nexport class LogGroupRule {\r\n\r\n  private _regExp: RegExp;\r\n  private _level: LogLevel;\r\n  private _loggerType: LoggerType;\r\n  private _logFormat: LogFormat;\r\n  private _callBackLogger: ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null;\r\n  private _formatterLogMessage: ((message: LogMessage) => string) | null = null;\r\n\r\n  /**\r\n   * Create a LogGroupRule. Basically you define what logger name(s) match for this group, what level should be used what logger type (where to log)\r\n   * and what format to write in. If the loggerType is custom, then the callBackLogger must be supplied as callback function to return a custom logger.\r\n   * @param regExp Regular expression, what matches for your logger names for this group\r\n   * @param level LogLevel\r\n   * @param logFormat LogFormat\r\n   * @param loggerType Type of logger, if Custom, make sure to implement callBackLogger and pass in, this will be called so you can return your own logger.\r\n   * @param callBackLogger Callback function to return a new clean custom logger (yours!)\r\n   */\r\n  constructor(regExp: RegExp, level: LogLevel, logFormat: LogFormat = new LogFormat(),\r\n              loggerType: LoggerType = LoggerType.Console,\r\n              callBackLogger: ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null = null) {\r\n    this._regExp = regExp;\r\n    this._level = level;\r\n    this._logFormat = logFormat;\r\n    this._loggerType = loggerType;\r\n    this._callBackLogger = callBackLogger;\r\n  }\r\n\r\n  get regExp(): RegExp {\r\n    return this._regExp;\r\n  }\r\n\r\n  get level(): LogLevel {\r\n    return this._level;\r\n  }\r\n\r\n  get loggerType(): LoggerType {\r\n    return this._loggerType;\r\n  }\r\n\r\n  get logFormat(): LogFormat {\r\n    return this._logFormat;\r\n  }\r\n\r\n  get callBackLogger(): ((name: string, settings: LogGroupRuntimeSettings) => Logger) | null {\r\n    return this._callBackLogger;\r\n  }\r\n\r\n  /**\r\n   * Get the formatterLogMessage function, see comment on the setter.\r\n   * @returns {((message:LogMessage)=>string)|null}\r\n   */\r\n  get formatterLogMessage(): ((message: LogMessage) => string) | null {\r\n    return this._formatterLogMessage;\r\n  }\r\n\r\n  /**\r\n   * Set the default formatterLogMessage function, if set it is applied to all type of loggers except for a custom logger.\r\n   * By default this is null (not set). You can assign a function to allow custom formatting of a log message.\r\n   * Each log message will call this function then and expects your function to format the message and return a string.\r\n   * Will throw an error if you attempt to set a formatterLogMessage if the LoggerType is custom.\r\n   * @param value The formatter function, or null to reset it.\r\n   */\r\n  set formatterLogMessage(value: ((message: LogMessage) => string) | null) {\r\n    if (value !== null && this._loggerType === LoggerType.Custom) {\r\n      throw new Error(\"You cannot specify a formatter for log messages if your loggerType is Custom\");\r\n    }\r\n    this._formatterLogMessage = value;\r\n  }\r\n}\r\n","import {LogGroupRule} from \"./LogGroupRule\";\r\n\r\n/**\r\n * Options object you can use to configure the LoggerFactory you create at LFService.\r\n */\r\nexport class LoggerFactoryOptions {\r\n\r\n  private _logGroupRules: LogGroupRule[] = [];\r\n  private _enabled: boolean = true;\r\n\r\n  /**\r\n   * Add LogGroupRule, see {LogGroupRule) for details\r\n   * @param rule Rule to add\r\n   * @returns {LoggerFactoryOptions} returns itself\r\n   */\r\n  public addLogGroupRule(rule: LogGroupRule): LoggerFactoryOptions {\r\n    this._logGroupRules.push(rule);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enable or disable logging completely for the LoggerFactory.\r\n   * @param enabled True for enabled (default)\r\n   * @returns {LoggerFactoryOptions} returns itself\r\n   */\r\n  public setEnabled(enabled: boolean): LoggerFactoryOptions {\r\n    this._enabled = enabled;\r\n    return this;\r\n  }\r\n\r\n  get logGroupRules(): LogGroupRule[] {\r\n    return this._logGroupRules;\r\n  }\r\n\r\n  get enabled(): boolean {\r\n    return this._enabled;\r\n  }\r\n}\r\n","import {SimpleMap} from \"../../utils/DataStructures\";\r\nimport {LogLevel} from \"../LoggerOptions\";\r\nimport {LoggerFactory} from \"./LoggerFactory\";\r\nimport {LoggerFactoryImpl} from \"./LoggerFactoryImpl\";\r\nimport {LoggerFactoryRuntimeSettings} from \"./LoggerFactoryRuntimeSettings\";\r\nimport {ExtensionHelper} from \"../../extension/ExtensionHelper\";\r\nimport {LogGroupRule} from \"./LogGroupRule\";\r\nimport {LoggerFactoryOptions} from \"./LoggerFactoryOptions\";\r\nimport {LogGroupRuntimeSettings} from \"./LogGroupRuntimeSettings\";\r\nimport {LFServiceRuntimeSettings} from \"./LFServiceRuntimeSettings\";\r\n\r\nclass LFServiceImpl implements LFServiceRuntimeSettings {\r\n\r\n  // Loaded on demand. Do NOT change as webpack may pack things in wrong order otherwise.\r\n  private static _INSTANCE: LFServiceImpl | null = null;\r\n\r\n  private _nameCounter: number = 1;\r\n  private _mapFactories: SimpleMap<LoggerFactoryImpl> = new SimpleMap<LoggerFactoryImpl>();\r\n\r\n  private constructor() {\r\n    // Private constructor.\r\n\r\n    ExtensionHelper.register();\r\n  }\r\n\r\n  public static getInstance(): LFServiceImpl {\r\n    // Loaded on demand. Do NOT change as webpack may pack things in wrong order otherwise.\r\n    if (LFServiceImpl._INSTANCE === null) {\r\n      LFServiceImpl._INSTANCE = new LFServiceImpl();\r\n    }\r\n    return LFServiceImpl._INSTANCE;\r\n  }\r\n\r\n  /**\r\n   * Create a new LoggerFactory with given options (if any). If no options\r\n   * are specified, the LoggerFactory, will accept any named logger and will\r\n   * log on info level by default for, to the console.\r\n   * @param options Options, optional.\r\n   * @returns {LoggerFactory}\r\n   */\r\n  public createLoggerFactory(options: LoggerFactoryOptions | null = null): LoggerFactory {\r\n    const name = \"LoggerFactory\" + this._nameCounter++;\r\n    return this.createNamedLoggerFactory(name, options);\r\n  }\r\n\r\n  /**\r\n   * Create a new LoggerFactory using given name (used for console api/extension).\r\n   * @param name Name Pick something short but distinguishable.\r\n   * @param options Options, optional\r\n   * @return {LoggerFactory}\r\n   */\r\n  public createNamedLoggerFactory(name: string, options: LoggerFactoryOptions | null = null): LoggerFactory {\r\n    if (this._mapFactories.exists(name)) {\r\n      throw new Error(\"LoggerFactory with name \" + name + \" already exists.\");\r\n    }\r\n\r\n    let factory: LoggerFactoryImpl;\r\n\r\n    if (options !== null) {\r\n      factory = new LoggerFactoryImpl(name, options);\r\n    }\r\n    else {\r\n      factory = new LoggerFactoryImpl(name, LFServiceImpl.createDefaultOptions());\r\n    }\r\n    this._mapFactories.put(name, factory);\r\n\r\n    return factory;\r\n  }\r\n\r\n  /**\r\n   * Closes all Loggers for LoggerFactories that were created.\r\n   * After this call, all previously fetched Loggers (from their\r\n   * factories) are unusable. The factories remain as they were.\r\n   */\r\n  public closeLoggers(): void {\r\n    this._mapFactories.values().forEach((factory: LoggerFactoryImpl) => {\r\n      factory.closeLoggers();\r\n    });\r\n\r\n    this._mapFactories.clear();\r\n    this._nameCounter = 1;\r\n  }\r\n\r\n  public getRuntimeSettingsForLoggerFactories(): LoggerFactoryRuntimeSettings[] {\r\n    const result: LoggerFactoryRuntimeSettings[] = [];\r\n    this._mapFactories.forEachValue((factory) => result.push(factory));\r\n    return result;\r\n  }\r\n\r\n  public getLogGroupSettings(nameLoggerFactory: string, idLogGroupRule: number): LogGroupRuntimeSettings | null {\r\n    const factory = this._mapFactories.get(nameLoggerFactory);\r\n    if (typeof factory === \"undefined\") {\r\n      return null;\r\n    }\r\n    return factory.getLogGroupRuntimeSettingsByIndex(idLogGroupRule);\r\n  }\r\n\r\n  public getLoggerFactoryRuntimeSettingsByName(nameLoggerFactory: string): LoggerFactoryRuntimeSettings | null {\r\n    const result = this._mapFactories.get(nameLoggerFactory);\r\n    if (typeof result === \"undefined\") {\r\n      return null;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private static createDefaultOptions(): LoggerFactoryOptions {\r\n    return new LoggerFactoryOptions().addLogGroupRule(new LogGroupRule(new RegExp(\".+\"), LogLevel.Info));\r\n  }\r\n}\r\n\r\n/**\r\n * Create and configure your LoggerFactory from here.\r\n */\r\nexport class LFService {\r\n\r\n  private static DEFAULT_LOGGER_FACTORY_NAME = \"DEFAULT\";\r\n\r\n  private static INSTANCE_SERVICE = LFServiceImpl.getInstance();\r\n  private static DEFAULT_LOGGER_FACTORY: LoggerFactory | null = null;\r\n\r\n  /**\r\n   * Create a new LoggerFactory with given options (if any). If no options\r\n   * are specified, the LoggerFactory, will accept any named logger and will\r\n   * log on info level by default for, to the console.\r\n   * @param options Options, optional.\r\n   * @returns {LoggerFactory}\r\n   */\r\n  public static createLoggerFactory(options: LoggerFactoryOptions | null = null): LoggerFactory {\r\n    return LFService.INSTANCE_SERVICE.createLoggerFactory(options);\r\n  }\r\n\r\n  /**\r\n   * Create a new LoggerFactory using given name (used for console api/extension).\r\n   * @param name Name Pick something short but distinguishable. The word \"DEFAULT\" is reserved and cannot be taken, it is used\r\n   * for the default LoggerFactory.\r\n   * @param options Options, optional\r\n   * @return {LoggerFactory}\r\n   */\r\n  public static createNamedLoggerFactory(name: string, options: LoggerFactoryOptions | null = null): LoggerFactory {\r\n    if (name === LFService.DEFAULT_LOGGER_FACTORY_NAME) {\r\n      throw new Error(\"LoggerFactory name: \" + LFService.DEFAULT_LOGGER_FACTORY_NAME + \" is reserved and cannot be used.\");\r\n    }\r\n    return LFService.INSTANCE_SERVICE.createNamedLoggerFactory(name, options);\r\n  }\r\n\r\n  /**\r\n   * Closes all Loggers for LoggerFactories that were created.\r\n   * After this call, all previously fetched Loggers (from their\r\n   * factories) are unusable. The factories remain as they were.\r\n   */\r\n  public static closeLoggers(): void {\r\n    return LFService.INSTANCE_SERVICE.closeLoggers();\r\n  }\r\n\r\n  /**\r\n   * Return LFServiceRuntimeSettings to retrieve information loggerfactories\r\n   * and their runtime settings.\r\n   * @returns {LFServiceRuntimeSettings}\r\n   */\r\n  public static getRuntimeSettings(): LFServiceRuntimeSettings {\r\n    return LFService.INSTANCE_SERVICE;\r\n  }\r\n\r\n  /**\r\n   * This property returns the default LoggerFactory (if not yet initialized it is initialized).\r\n   * This LoggerFactory can be used to share among multiple\r\n   * applications/libraries - that way you can enable/change logging over everything from\r\n   * your own application when required.\r\n   * It is recommended to be used by library developers to make logging easily available for the\r\n   * consumers of their libraries.\r\n   * It is highly recommended to use Loggers from the LoggerFactory with unique grouping/names to prevent\r\n   * clashes of Loggers between multiple projects.\r\n   * @returns {LoggerFactory} Returns the default LoggerFactory\r\n   */\r\n  public static get DEFAULT(): LoggerFactory {\r\n    return LFService.getDefault();\r\n  }\r\n\r\n  private static getDefault(): LoggerFactory {\r\n    if (LFService.DEFAULT_LOGGER_FACTORY === null) {\r\n      LFService.DEFAULT_LOGGER_FACTORY = LFService.DEFAULT_LOGGER_FACTORY = LFService.INSTANCE_SERVICE.createNamedLoggerFactory(\r\n        LFService.DEFAULT_LOGGER_FACTORY_NAME,\r\n        new LoggerFactoryOptions().addLogGroupRule(new LogGroupRule(new RegExp(\".+\"), LogLevel.Severe))\r\n      );\r\n    }\r\n    return LFService.DEFAULT_LOGGER_FACTORY;\r\n  }\r\n}\r\n","import {DateFormatEnum, LoggerType, LogLevel} from \"../log/LoggerOptions\";\r\nimport {LoggerFactoryRuntimeSettings} from \"../log/standard/LoggerFactoryRuntimeSettings\";\r\nimport {LFService} from \"../log/standard/LFService\";\r\nimport {StringBuilder, TuplePair} from \"../utils/DataStructures\";\r\nimport {LogGroupRuntimeSettings} from \"../log/standard/LogGroupRuntimeSettings\";\r\nimport {LFServiceRuntimeSettings} from \"../log/standard/LFServiceRuntimeSettings\";\r\n\r\n/**\r\n * Allows to change the settings for one or all LogGroups.\r\n * Options will be applied only if set, undefined options are ignored.\r\n *\r\n * The only property really required is group.\r\n */\r\nexport interface LogGroupControlSettings {\r\n\r\n  /**\r\n   * Apply to specific group, or \"all\".\r\n   */\r\n  group: number | \"all\";\r\n\r\n  /**\r\n   * Set log level, undefined will not change the setting.\r\n   */\r\n  logLevel: \"Severe\" | \"Warning\" | \"Info\" | \"Config\" | \"Fine\" | \"Finer\" | \"Finest\" |  undefined;\r\n\r\n  /**\r\n   * Set the log format, undefined will not change the setting.\r\n   */\r\n  logFormat: \"Default\" | \"YearMonthDayTime\" | \"YearDayMonthWithFullTime\" | \"YearDayMonthTime\" | undefined;\r\n\r\n  /**\r\n   * Whether to show timestamp, undefined will not change the setting.\r\n   */\r\n  showTimestamp: boolean | undefined;\r\n\r\n  /**\r\n   * Whether to show the logger name, undefined will not change the setting.\r\n   */\r\n  showLoggerName: boolean | undefined;\r\n}\r\n\r\n/**\r\n *  Interface to control LoggerFactories (LoggerFactory and related loggers) through\r\n *  ordinary console (in browsers).\r\n */\r\nexport interface LoggerControl {\r\n\r\n  /**\r\n   * Shows help for this object.\r\n   */\r\n  help(): void;\r\n\r\n  /**\r\n   * Lists all registered logger factories with associated log groups with respective ids\r\n   */\r\n  listFactories(): void;\r\n\r\n  /**\r\n   * Show settings for LoggerFactory id (see listFactories() to get it) or null, for all.\r\n   * @param idFactory LoggerFactory id or all\r\n   */\r\n  showSettings(idFactory: number | \"all\"): void;\r\n\r\n  /**\r\n   * Reset one or all factories back to original values.\r\n   * @param idFactory Id factory or \"all\" for all.\r\n   */\r\n  reset(idFactory: number | \"all\"): void;\r\n\r\n  /**\r\n   * Return LoggerFactoryControl object. Throws error when number is invalid.\r\n   * @param idFactory Id factory\r\n   * @returns {LoggerFactoryControl}\r\n   */\r\n  getLoggerFactoryControl(idFactory: number): LoggerFactoryControl;\r\n\r\n}\r\n\r\n/**\r\n * Interface to control LoggerFactory.\r\n */\r\nexport interface LoggerFactoryControl {\r\n\r\n  /**\r\n   * Shows help\r\n   */\r\n  help(): void;\r\n\r\n  /**\r\n   * Shows an example of usage.\r\n   */\r\n  example(): void;\r\n\r\n  /**\r\n   * Prints settings for given group id, \"all\" for all group.\r\n   */\r\n  showSettings(id: number | \"all\"): void;\r\n\r\n  /**\r\n   * Apply new settings, see LogGroupControlSettings for details.\r\n   * @param settings Settings to set\r\n   */\r\n  change(settings: LogGroupControlSettings): void;\r\n\r\n  /**\r\n   * Resets everything to original values, for one specific or for all groups.\r\n   */\r\n  reset(id: number | \"all\"): void;\r\n}\r\n\r\nexport class LoggerControlImpl implements LoggerControl {\r\n\r\n  private static _help: string =\r\n`\r\n  help(): void\r\n    ** Shows this help.\r\n\r\n  listFactories(): void\r\n    ** List all registered LoggerFactories with associated log groups with respective ids (ids can be used to target a factory and/or group).\r\n\r\n  showSettings(idFactory: number | \"all\"): void\r\n    ** Show log group settings for idFactory (use listFactories to find id for a LoggerFactory). If idFactory is \"all\" shows all factories.\r\n\r\n  getLoggerFactoryControl(idFactory: number): LoggerFactoryControl\r\n    ** Return LoggerFactoryControl when found for given idFactory or throws Error if invalid or null, get the id by using listFactories()\r\n\r\n  reset(idFactory: number | \"all\"): void\r\n    ** Resets given factory or all factories back to original values.\r\n`;\r\n\r\n  public help(): void {\r\n    /* tslint:disable:no-console */\r\n    console.log(LoggerControlImpl._help);\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public listFactories(): void {\r\n    const rtSettingsFactories = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\r\n    const result = new StringBuilder();\r\n    result.appendLine(\"Registered LoggerFactories (index / name)\");\r\n    for (let i = 0; i < rtSettingsFactories.length; i++) {\r\n      const rtSettingsFactory = rtSettingsFactories[i];\r\n      result.append(\"  \" + i).append(\": \" + rtSettingsFactory.getName() + \"\\n\");\r\n    }\r\n    /* tslint:disable:no-console */\r\n    console.log(result.toString());\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public showSettings(id: number | \"all\" = \"all\"): void {\r\n    const result: Array<TuplePair<number, LoggerFactoryRuntimeSettings>> = [];\r\n\r\n    if (id === \"all\") {\r\n      let idx = 0;\r\n      LoggerControlImpl._getRuntimeSettingsLoggerFactories().forEach((item) => {\r\n        result.push(new TuplePair(idx++, item));\r\n      });\r\n    }\r\n    else {\r\n      const settings = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\r\n      if (id >= 0 && id < settings.length) {\r\n        result.push(new TuplePair(id, settings[id]));\r\n      }\r\n      else {\r\n        throw new Error(\"Requested number: \" + id + \" was not found.\");\r\n      }\r\n    }\r\n\r\n    for (const setting of result) {\r\n      /* tslint:disable:no-console */\r\n      console.log(\"  LoggerFactory: \" + setting.y.getName() + \" (id=\" + setting.x + \")\");\r\n      const logGroupRuntimeSettings = setting.y.getLogGroupRuntimeSettings();\r\n      for (let g = 0; g < logGroupRuntimeSettings.length; g++) {\r\n        const groupSetting = logGroupRuntimeSettings[g];\r\n        console.log(\"     LogGroup: (id=\" + g + \")\");\r\n        console.log(\"       RegExp: \" + groupSetting.logGroupRule.regExp.source);\r\n        console.log(\"       Level: \" + LogLevel[groupSetting.level].toString());\r\n        console.log(\"       LoggerType: \" + LoggerType[groupSetting.loggerType].toString());\r\n      }\r\n      /* tslint:enable:no-console */\r\n    }\r\n  }\r\n\r\n  public reset(idFactory: number | \"all\" = \"all\"): void {\r\n    const loggerFactoriesSettings = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\r\n    let result: LoggerFactoryRuntimeSettings[] = [];\r\n    if (idFactory === \"all\") {\r\n      result = loggerFactoriesSettings;\r\n    }\r\n    else {\r\n      if (idFactory >= 0 && idFactory < loggerFactoriesSettings.length) {\r\n        result.push(loggerFactoriesSettings[idFactory]);\r\n      }\r\n    }\r\n\r\n    result.forEach((setting) => {\r\n      /* tslint:disable:no-console */\r\n      console.log(\"Reset all settings for factory \" + idFactory);\r\n      /* tslint:enable:no-console */\r\n      const control = new LoggerFactoryControlImpl(setting);\r\n      control.reset();\r\n    });\r\n  }\r\n\r\n  public getLoggerFactoryControl(idFactory: number): LoggerFactoryControl {\r\n    const loggerFactoriesSettings = LoggerControlImpl._getRuntimeSettingsLoggerFactories();\r\n    if (idFactory >= 0 &&  idFactory < loggerFactoriesSettings.length) {\r\n      return new LoggerFactoryControlImpl(loggerFactoriesSettings[idFactory]);\r\n    }\r\n    throw new Error(\"idFactory is invalid (less than 0) or non existing id.\");\r\n  }\r\n\r\n  private static _getRuntimeSettingsLoggerFactories(): LoggerFactoryRuntimeSettings[] {\r\n    return LoggerControlImpl._getSettings().getRuntimeSettingsForLoggerFactories();\r\n  }\r\n\r\n  private static _getSettings(): LFServiceRuntimeSettings {\r\n    return LFService.getRuntimeSettings();\r\n  }\r\n}\r\n\r\nclass LoggerFactoryControlImpl implements LoggerFactoryControl {\r\n\r\n  private static _help: string =\r\n    `\r\n  help(): void\r\n    ** Shows this help.\r\n\r\n  example(): void\r\n    ** Shows an example of usage.\r\n\r\n  showSettings(id: number | \"all\"): void\r\n    ** Prints settings for given group id, \"all\" for all group.\r\n\r\n  change(settings: LogGroupControlSettings): void\r\n    ** Changes the current settings for one or all log groups.\r\n    **\r\n       LogGroupControlSettings, properties of object:\r\n         group: number | \"all\"\r\n           ** Apply to specific group, or \"all\".\r\n           ** Required\r\n\r\n         logLevel: \"Fatal\" | \"Error\" | \"Warn\" | \"Info\" | \"Debug\" | \"Trace\" | undefined\r\n           ** Set log level, undefined will not change the setting.\r\n           ** Optional\r\n\r\n         logFormat: \"Default\" | \"YearMonthDayTime\" | \"YearDayMonthWithFullTime\" | \"YearDayMonthTime\" | undefined\r\n           ** Set the log format, undefined will not change the setting.\r\n           ** Optional\r\n\r\n         showTimestamp: boolean | undefined\r\n           ** Whether to show timestamp, undefined will not change the setting.\r\n           ** Optional\r\n\r\n         showLoggerName: boolean | undefined\r\n           ** Whether to show the logger name, undefined will not change the setting.\r\n           ** Optional\r\n\r\n  reset(id: number | \"all\"): void\r\n    ** Resets everything to original values, for one specific or for all groups.\r\n\r\n  help():\r\n    ** Shows this help.\r\n`;\r\n\r\n  private static _example: string =\r\n    `\r\n  Examples:\r\n    change({group: \"all\", logLevel: \"Info\"})\r\n      ** Change loglevel to Info for all groups.\r\n\r\n    change({group: 1, recursive:false, logLevel: \"Warning\"})\r\n      ** Change logLevel for group 1 to Warn.\r\n\r\n    change({group: \"all\", logLevel: \"Fine\", logFormat: \"YearDayMonthTime\", showTimestamp:false, showLoggerName:false})\r\n      ** Change loglevel to Debug for all groups, apply format, do not show timestamp and logger names.\r\n`;\r\n\r\n  private _settings: LoggerFactoryRuntimeSettings;\r\n\r\n  public constructor(settings: LoggerFactoryRuntimeSettings) {\r\n    this._settings = settings;\r\n  }\r\n\r\n  public help(): void {\r\n    /* tslint:disable:no-console */\r\n    console.log(LoggerFactoryControlImpl._help);\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public example(): void {\r\n    /* tslint:disable:no-console */\r\n    console.log(LoggerFactoryControlImpl._example);\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public showSettings(id: number | \"all\" = \"all\"): void {\r\n    const result = new StringBuilder();\r\n    const logGroupRuntimeSettings = this._settings.getLogGroupRuntimeSettings();\r\n\r\n    result.appendLine(\"Registered LogGroups (index / expression)\");\r\n    for (let i = 0; i < logGroupRuntimeSettings.length; i++) {\r\n      const logGroupRuntimeSetting = logGroupRuntimeSettings[i];\r\n      result.appendLine(\"  \" + i + \": \" + logGroupRuntimeSetting.logGroupRule.regExp.source + \", logLevel=\" +\r\n        LogLevel[logGroupRuntimeSetting.level].toString() + \", showTimestamp=\" + logGroupRuntimeSetting.logFormat.showTimeStamp +\r\n        \", showLoggerName=\" + logGroupRuntimeSetting.logFormat.showLoggerName +\r\n        \", format=\" + DateFormatEnum[logGroupRuntimeSetting.logFormat.dateFormat.formatEnum].toString());\r\n    }\r\n    /* tslint:disable:no-console */\r\n    console.log(result.toString());\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public change(settings: LogGroupControlSettings): void {\r\n\r\n    const logGroupRuntimeSettings = this._getLogGroupRunTimeSettingsFor(settings.group);\r\n\r\n    let logLevel: LogLevel | null = null;\r\n    let formatEnum: DateFormatEnum | null = null;\r\n    let showLoggerName: boolean | null = null;\r\n    let showTimestamp: boolean | null = null;\r\n\r\n    let result: string | null = null;\r\n\r\n    const addResult = (value: string) => {\r\n      if (result !== null) {\r\n        result += \", \";\r\n      }\r\n      if (result === null) {\r\n        result = value;\r\n      }\r\n      else {\r\n        result += value;\r\n      }\r\n    };\r\n\r\n    if (typeof settings.logLevel === \"string\") {\r\n      logLevel = LogLevel.fromString(settings.logLevel);\r\n      addResult(\"logLevel=\" + settings.logLevel);\r\n    }\r\n    if (typeof settings.logFormat === \"string\") {\r\n      formatEnum = DateFormatEnum.fromString(settings.logFormat);\r\n      addResult(\"logFormat=\" + settings.logFormat);\r\n    }\r\n    if (typeof settings.showLoggerName === \"boolean\") {\r\n      showLoggerName = settings.showLoggerName;\r\n      addResult(\"showLoggerName=\" + settings.showLoggerName);\r\n    }\r\n    if (typeof settings.showTimestamp === \"boolean\") {\r\n      showTimestamp = settings.showTimestamp;\r\n      addResult(\"showTimestamp=\" + settings.showTimestamp);\r\n    }\r\n\r\n    logGroupRuntimeSettings.forEach((s) => {\r\n      if (logLevel !== null) {\r\n        s.level = logLevel;\r\n      }\r\n      if (formatEnum !== null) {\r\n        s.logFormat.dateFormat.formatEnum = formatEnum;\r\n      }\r\n      if (showTimestamp !== null) {\r\n        s.logFormat.showTimeStamp = showTimestamp;\r\n      }\r\n      if (showLoggerName !== null) {\r\n        s.logFormat.showLoggerName = showLoggerName;\r\n      }\r\n    });\r\n\r\n    /* tslint:disable:no-console */\r\n    console.log(\"Applied changes: \" + result + \" to log groups '\" + settings.group + \"'.\");\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public reset(idGroup: number | \"all\" = \"all\"): void {\r\n    const settings = this._getLogGroupRunTimeSettingsFor(idGroup);\r\n    for (const setting of settings) {\r\n      setting.level = setting.logGroupRule.level;\r\n      setting.logFormat.showTimeStamp = setting.logGroupRule.logFormat.showTimeStamp;\r\n      setting.logFormat.showLoggerName = setting.logGroupRule.logFormat.showLoggerName;\r\n      setting.logFormat.dateFormat.formatEnum = setting.logGroupRule.logFormat.dateFormat.formatEnum;\r\n    }\r\n    /* tslint:disable:no-console */\r\n    console.log(\"Reset all settings for group \" + idGroup);\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  private _getLogGroupRunTimeSettingsFor(idGroup: number | \"all\"): LogGroupRuntimeSettings[] {\r\n    let settings: LogGroupRuntimeSettings[] = [];\r\n    if (idGroup === \"all\") {\r\n      settings = this._settings.getLogGroupRuntimeSettings();\r\n    }\r\n    else {\r\n      this._checkIndex(idGroup);\r\n      settings.push(this._settings.getLogGroupRuntimeSettings()[idGroup]);\r\n    }\r\n    return settings;\r\n  }\r\n\r\n  private _checkIndex(index: number): void {\r\n    if (index < 0 || index >= this._settings.getLogGroupRuntimeSettings().length) {\r\n      throw new Error(\"Invalid index, use listLogGroups to find out a valid one.\");\r\n    }\r\n  }\r\n}\r\n","import {CategoryServiceImpl} from \"../log/category/CategoryService\";\r\nimport {DateFormatEnum, LoggerType, LogLevel} from \"../log/LoggerOptions\";\r\nimport {StringBuilder} from \"../utils/DataStructures\";\r\nimport {Category} from \"../log/category/Category\";\r\n\r\n/**\r\n * Allows to change the settings for one or all Categories.\r\n * Options will be applied only if set, undefined options are ignored.\r\n *\r\n * The only properties required are recursive (to apply recursively to child categories or not) and idCategory.\r\n */\r\nexport interface CategoryServiceControlSettings {\r\n\r\n  /**\r\n   * Apply to child categories (true) or not.\r\n   */\r\n  recursive: boolean;\r\n\r\n  /**\r\n   * Apply to specific category, or \"all\".\r\n   */\r\n  category: number | \"all\";\r\n\r\n  /**\r\n   * Set log level, undefined will not change the setting.\r\n   */\r\n  logLevel: \"Severe\" | \"Warning\" | \"Info\" | \"Config\" | \"Fine\" | \"Finer\" | \"Finest\" | undefined;\r\n\r\n  /**\r\n   * Set the log format, undefined will not change the setting.\r\n   */\r\n  logFormat: \"Default\" | \"YearMonthDayTime\" | \"YearDayMonthWithFullTime\" | \"YearDayMonthTime\" | undefined;\r\n\r\n  /**\r\n   * Whether to show timestamp, undefined will not change the setting.\r\n   */\r\n  showTimestamp: boolean | undefined;\r\n\r\n  /**\r\n   * Whether to show the category name, undefined will not change the setting.\r\n   */\r\n  showCategoryName: boolean | undefined;\r\n}\r\n\r\n/**\r\n * Interface to control CategoryService and relatedm, through\r\n * ordinary console in browsers.\r\n */\r\nexport interface CategoryServiceControl {\r\n\r\n  /**\r\n   * Shows help\r\n   */\r\n  help(): void;\r\n\r\n  /**\r\n   * Shows an example of usage.\r\n   */\r\n  example(): void;\r\n\r\n  /**\r\n   * Prints settings for given category id, when \"all\" for all categories.\r\n   */\r\n  showSettings(id: number | \"all\"): void;\r\n\r\n  /**\r\n   * Apply new settings, see CategoryServiceControlSettings for details.\r\n   * @param settings Settings to set\r\n   */\r\n  change(settings: CategoryServiceControlSettings): void;\r\n\r\n  /**\r\n   * Resets everything to original values, for one specific or for all categories.\r\n   */\r\n  reset(id: number | \"all\"): void;\r\n}\r\n\r\n/**\r\n * Implementation class for CategoryServiceControl.\r\n */\r\nexport class CategoryServiceControlImpl implements CategoryServiceControl {\r\n\r\n  private static _help: string =\r\n    `\r\n  help(): void\r\n    ** Shows this help.\r\n\r\n  example(): void\r\n    ** Shows an example on how to use this.\r\n\r\n  showSettings(id: number | \"all\" = \"all\"): void\r\n    ** Shows settings for a specific category, or for all. The id of categories can be found by calling this method without parameter.\r\n\r\n  change(settings: CategoryServiceControlSettings): void\r\n    ** Changes the current settings for one or all categories.\r\n    **\r\n       CategoryServiceControlSettings, properties of object:\r\n         category: number | \"all\"\r\n           ** Apply to specific category, or \"all\".\r\n           ** Required\r\n\r\n         recursive: boolean\r\n           ** Apply to child categories (true) or not.\r\n           ** Required\r\n\r\n         logLevel: \"Fatal\" | \"Error\" | \"Warn\" | \"Info\" | \"Debug\" | \"Trace\" | undefined\r\n           ** Set log level, undefined will not change the setting.\r\n           ** Optional\r\n\r\n         logFormat: \"Default\" | \"YearMonthDayTime\" | \"YearDayMonthWithFullTime\" | \"YearDayMonthTime\" | undefined\r\n           ** Set the log format, undefined will not change the setting.\r\n           ** Optional\r\n\r\n         showTimestamp: boolean | undefined\r\n           ** Whether to show timestamp, undefined will not change the setting.\r\n           ** Optional\r\n\r\n         showCategoryName: boolean | undefined\r\n           ** Whether to show the category name, undefined will not change the setting.\r\n           ** Optional\r\n\r\n   reset(id: number | \"all\"): void\r\n     ** Resets everything to original values, for one specific or for all categories.\r\n`;\r\n\r\n  private static _example: string =\r\n`\r\n  Examples:\r\n    change({category: \"all\", recursive:true, logLevel: \"Info\"})\r\n      ** Change loglevel to Info for all categories, apply to child categories as well.\r\n\r\n    change({category: 1, recursive:false, logLevel: \"Warn\"})\r\n      ** Change logLevel for category 1, do not recurse.\r\n\r\n    change({category: \"all\", recursive:true, logLevel: \"Debug\", logFormat: \"YearDayMonthTime\", showTimestamp:false, showCategoryName:false})\r\n      ** Change loglevel to Debug for all categories, apply format, do not show timestamp and category names - recursively to child categories.\r\n\r\n`;\r\n\r\n  public help(): void {\r\n    /* tslint:disable:no-console */\r\n    console.log(CategoryServiceControlImpl._help);\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public example(): void {\r\n    /* tslint:disable:no-console */\r\n    console.log(CategoryServiceControlImpl._example);\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public showSettings(id: number | \"all\" = \"all\"): void {\r\n    const result = new StringBuilder();\r\n    const service = CategoryServiceControlImpl._getCategoryService();\r\n    const categories = CategoryServiceControlImpl._getCategories(id);\r\n\r\n    categories.forEach((category) => {\r\n      CategoryServiceControlImpl._processCategory(service, category, result, 0);\r\n    });\r\n\r\n    /* tslint:disable:no-console */\r\n    console.log(result.toString());\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public change(settings: CategoryServiceControlSettings): void {\r\n    const service = CategoryServiceControlImpl._getCategoryService();\r\n    const categories = CategoryServiceControlImpl._getCategories(settings.category);\r\n\r\n    let logLevel: LogLevel | null = null;\r\n    let formatEnum: DateFormatEnum | null = null;\r\n    let showCategoryName: boolean | null = null;\r\n    let showTimestamp: boolean | null = null;\r\n\r\n    let result: string | null = null;\r\n\r\n    const addResult = (value: string) => {\r\n      if (result !== null) {\r\n        result += \", \";\r\n      }\r\n      if (result === null) {\r\n        result = value;\r\n      }\r\n      else {\r\n        result += value;\r\n      }\r\n    };\r\n\r\n    addResult(\"recursive=\" + settings.recursive);\r\n\r\n    if (typeof settings.logLevel === \"string\") {\r\n      logLevel = LogLevel.fromString(settings.logLevel);\r\n      addResult(\"logLevel=\" + settings.logLevel);\r\n    }\r\n    if (typeof settings.logFormat === \"string\") {\r\n      formatEnum = DateFormatEnum.fromString(settings.logFormat);\r\n      addResult(\"logFormat=\" + settings.logFormat);\r\n    }\r\n    if (typeof settings.showCategoryName === \"boolean\") {\r\n      showCategoryName = settings.showCategoryName;\r\n      addResult(\"showCategoryName=\" + settings.showCategoryName);\r\n    }\r\n    if (typeof settings.showTimestamp === \"boolean\") {\r\n      showTimestamp = settings.showTimestamp;\r\n      addResult(\"showTimestamp=\" + settings.showTimestamp);\r\n    }\r\n\r\n    const applyChanges = (cat: Category) => {\r\n      const categorySettings = service.getCategorySettings(cat);\r\n      // Should not happen but make tslint happy\r\n      if (categorySettings !== null) {\r\n        if (logLevel !== null) {\r\n          categorySettings.logLevel = logLevel;\r\n        }\r\n        if (formatEnum !== null) {\r\n          categorySettings.logFormat.dateFormat.formatEnum = formatEnum;\r\n        }\r\n        if (showTimestamp !== null) {\r\n          categorySettings.logFormat.showTimeStamp = showTimestamp;\r\n        }\r\n        if (showCategoryName !== null) {\r\n          categorySettings.logFormat.showCategoryName = showCategoryName;\r\n        }\r\n      }\r\n    };\r\n    categories.forEach((cat) => CategoryServiceControlImpl._applyToCategory(cat, settings.recursive, applyChanges));\r\n\r\n    /* tslint:disable:no-console */\r\n    console.log(\"Applied changes: \" + result + \" to categories '\" + settings.category + \"'.\");\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  public reset(id: number | \"all\" = \"all\"): void {\r\n    const service = CategoryServiceControlImpl._getCategoryService();\r\n    const categories = CategoryServiceControlImpl._getCategories(id);\r\n\r\n    const applyChanges = (cat: Category) => {\r\n      const categorySettings = service.getCategorySettings(cat);\r\n      const original = service.getOriginalCategorySettings(cat);\r\n\r\n      // Should not happen but make tslint happy\r\n      if (categorySettings !== null && original !== null) {\r\n        categorySettings.logLevel = original.logLevel;\r\n        categorySettings.logFormat.dateFormat.formatEnum = original.logFormat.dateFormat.formatEnum;\r\n        categorySettings.logFormat.showTimeStamp = original.logFormat.showTimeStamp;\r\n        categorySettings.logFormat.showCategoryName = original.logFormat.showCategoryName;\r\n      }\r\n    };\r\n\r\n    categories.forEach((cat) => CategoryServiceControlImpl._applyToCategory(cat, true, applyChanges));\r\n\r\n    /* tslint:disable:no-console */\r\n    console.log(\"Applied reset to category: \" + id + \".\");\r\n    /* tslint:enable:no-console */\r\n  }\r\n\r\n  private static _processCategory(service: CategoryServiceImpl, category: Category, result: StringBuilder, indent: number): void {\r\n    const settings = service.getCategorySettings(category);\r\n    if (settings !== null) {\r\n      result.append(\"  \" + category.id + \": \");\r\n      if (indent > 0) {\r\n        for (let i = 0; i < indent; i++) {\r\n          result.append(\"  \");\r\n        }\r\n      }\r\n      result.append(category.name + \" (\" + LogLevel[settings.logLevel].toString() + \"@\" + LoggerType[settings.loggerType].toString() + \")\\n\");\r\n\r\n      if (category.children.length > 0) {\r\n        category.children.forEach((child) => {\r\n          CategoryServiceControlImpl._processCategory(service, child, result, indent + 1);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private static _applyToCategory(category: Category, recursive: boolean, apply: (cat: Category) => void) {\r\n    apply(category);\r\n    if (recursive) {\r\n      category.children.forEach((child) => {\r\n        CategoryServiceControlImpl._applyToCategory(child, recursive, apply);\r\n      });\r\n    }\r\n  }\r\n\r\n  private static _getCategoryService(): CategoryServiceImpl {\r\n    return CategoryServiceImpl.getInstance();\r\n  }\r\n\r\n  private static _getCategories(idCategory: number | \"all\"): Category[] {\r\n    const service = CategoryServiceControlImpl._getCategoryService();\r\n\r\n    let categories: Category[] = [];\r\n    if (idCategory === \"all\") {\r\n      categories = service.getRootCategories();\r\n    }\r\n    else {\r\n      const category = service.getCategoryById(idCategory);\r\n      if (category === null) {\r\n        throw new Error(\"Failed to find category with id \" + idCategory);\r\n      }\r\n      categories.push(category);\r\n    }\r\n    return categories;\r\n  }\r\n\r\n}\r\n","import {LogLevel} from \"../LoggerOptions\";\r\nimport {CategoryLogger} from \"./CategoryLogger\";\r\nimport {CategoryServiceImpl} from \"./CategoryService\";\r\nimport {ErrorType, MessageType} from \"../standard/Logger\";\r\n\r\n/**\r\n * Category for use with categorized logging.\r\n * At minimum you need one category, which will serve as the root category.\r\n * You can create child categories (like a tree). You can have multiple root\r\n * categories.\r\n */\r\nexport class Category implements CategoryLogger {\r\n\r\n  private static currentId: number = 1;\r\n\r\n  private _id: number;\r\n\r\n  private _name: string;\r\n  private _parent: Category | null;\r\n  private _children: Category[] = [];\r\n  private _logLevel: LogLevel = LogLevel.Warning;\r\n\r\n  // Assigned lazily (on demand)\r\n  private _logger!: CategoryLogger;\r\n\r\n  public constructor(name: string, parent: Category | null = null) {\r\n    if (name.indexOf(\"#\") !== -1) {\r\n      throw new Error(\"Cannot use # in a name of a Category\");\r\n    }\r\n\r\n    this._id = Category.nextId();\r\n    this._name = name;\r\n    this._parent = parent;\r\n    if (this._parent !== null) {\r\n      this._parent._children.push(this);\r\n    }\r\n    CategoryServiceImpl.getInstance().registerCategory(this);\r\n  }\r\n\r\n  public get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public get parent(): Category | null {\r\n    return this._parent;\r\n  }\r\n\r\n  public get children(): Category[] {\r\n    return this._children;\r\n  }\r\n\r\n  public get logLevel(): LogLevel {\r\n    return this._logLevel;\r\n  }\r\n\r\n  public finest(msg: MessageType, ...categories: Category[]): void {\r\n    this.loadCategoryLogger();\r\n    this._logger.finest(msg, ...categories);\r\n  }\r\n\r\n  public finer(msg: MessageType, ...categories: Category[]): void {\r\n    this.loadCategoryLogger();\r\n    this._logger.finer(msg, ...categories);\r\n  }\r\n\r\n  public fine(msg: MessageType, ...categories: Category[]): void {\r\n    this.loadCategoryLogger();\r\n    this._logger.fine(msg, ...categories);\r\n  }\r\n\r\n  public config(msg: MessageType, ...categories: Category[]): void {\r\n    this.loadCategoryLogger();\r\n    this._logger.config(msg, ...categories);\r\n  }\r\n\r\n  public info(msg: MessageType, ...categories: Category[]): void {\r\n    this.loadCategoryLogger();\r\n    this._logger.info(msg, ...categories);\r\n  }\r\n\r\n  public warning(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\r\n    this.loadCategoryLogger();\r\n    this._logger.warning(msg, error, ...categories);\r\n  }\r\n\r\n  public severe(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\r\n    this.loadCategoryLogger();\r\n    this._logger.severe(msg, error, ...categories);\r\n  }\r\n\r\n  public resolved(msg: MessageType, error: ErrorType, ...categories: Category[]): void {\r\n    this.loadCategoryLogger();\r\n    this._logger.resolved(msg, error, ...categories);\r\n  }\r\n\r\n  public log(level: LogLevel, msg: MessageType, error: ErrorType, ...categories: Category[]): void {\r\n    this.loadCategoryLogger();\r\n    this._logger.log(level, msg, error, ...categories);\r\n  }\r\n\r\n  public getCategoryPath(): string {\r\n    let result = this.name;\r\n    let cat: Category | null = this.parent;\r\n\r\n    while (cat != null) {\r\n      result = cat.name + \"#\" + result;\r\n      cat = cat.parent;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Returns the id for this category (this\r\n   * is for internal purposes only).\r\n   * @returns {number} Id\r\n   */\r\n  public get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  private loadCategoryLogger() {\r\n    if (!this._logger) {\r\n      this._logger = CategoryServiceImpl.getInstance().getLogger(this);\r\n    }\r\n\r\n    if (typeof this._logger === \"undefined\" || this._logger === null) {\r\n      throw new Error(\"Failed to load a logger for category (should not happen): \" + this.name);\r\n    }\r\n  }\r\n\r\n  private static nextId(): number {\r\n    return Category.currentId++;\r\n  }\r\n}\r\n","import {CategoryLogger} from \"./CategoryLogger\";\r\nimport {Category} from \"./Category\";\r\nimport {RuntimeSettings} from \"./RuntimeSettings\";\r\nimport {CategoryConfiguration} from \"./CategoryConfiguration\";\r\nimport {CategoryServiceImpl} from \"./CategoryService\";\r\n\r\n/**\r\n * Categorized service for logging, where logging is bound to categories which\r\n * can log horizontally through specific application logic (services, group(s) of components etc).\r\n * For the standard way of logging like most frameworks do these days, use LFService instead.\r\n * If you want fine grained control to divide sections of your application in\r\n * logical units to enable/disable logging for, this is the service you want to use instead.\r\n * Also for this type a browser plugin will be available.\r\n */\r\nexport class CategoryServiceFactory {\r\n\r\n  private constructor() {\r\n    // Private constructor.\r\n  }\r\n\r\n  /**\r\n   * Return a CategoryLogger for given ROOT category (thus has no parent).\r\n   * You can only retrieve loggers for their root, when logging\r\n   * you specify to log for what (child)categories.\r\n   * @param root Category root (has no parent)\r\n   * @returns {CategoryLogger}\r\n   */\r\n  public static getLogger(root: Category): CategoryLogger {\r\n    return CategoryServiceImpl.getInstance().getLogger(root);\r\n  }\r\n\r\n  /**\r\n   * Clears everything, any registered (root)categories and loggers\r\n   * are discarded. Resets to default configuration.\r\n   */\r\n  public static clear() {\r\n    return CategoryServiceImpl.getInstance().clear();\r\n  }\r\n\r\n  /**\r\n   * Set the default configuration. New root loggers created get this\r\n   * applied. If you want to reset all current loggers to have this\r\n   * applied as well, pass in reset=true (the default is false). All\r\n   * categories runtimesettings will be reset then as well.\r\n   * @param config The new default configuration\r\n   * @param reset If true, will reset *all* runtimesettings for all loggers/categories to these. Default is true.\r\n   */\r\n  public static setDefaultConfiguration(config: CategoryConfiguration, reset: boolean = true): void {\r\n    CategoryServiceImpl.getInstance().setDefaultConfiguration(config, reset);\r\n  }\r\n\r\n  /**\r\n   * Set new configuration settings for a category (and possibly its child categories)\r\n   * @param config Config\r\n   * @param category Category\r\n   * @param applyChildren True to apply to child categories, defaults to false.\r\n   */\r\n  public static setConfigurationCategory(config: CategoryConfiguration, category: Category, applyChildren: boolean = false): void {\r\n    CategoryServiceImpl.getInstance().setConfigurationCategory(config, category, applyChildren);\r\n  }\r\n}\r\n","/**\r\n * Module containing bunch of JSON related stuff.\r\n */\r\nimport {LogLevel} from \"../log/LoggerOptions\";\r\nimport {SimpleMap, StringBuilder} from \"./DataStructures\";\r\nimport {Category} from \"../log/category/Category\";\r\n\r\nexport interface JSONType<T> {\r\n\r\n  getValue(): T;\r\n  toString(): string;\r\n\r\n}\r\n\r\nexport type ArrayType = boolean | string | number | JSONObject | null;\r\n\r\nabstract class JSONTypeImpl<T> implements JSONType<T> {\r\n\r\n  private _value: T;\r\n\r\n  constructor(value: T) {\r\n    this._value = value;\r\n  }\r\n\r\n  public getValue(): T {\r\n    return this._value;\r\n  }\r\n\r\n  public toString(): string {\r\n    const value = this.getValue();\r\n    if (value != null) {\r\n      return value.toString();\r\n    }\r\n    return \"null\";\r\n  }\r\n\r\n}\r\n\r\nclass JSONBooleanType extends JSONTypeImpl<boolean> {\r\n\r\n  constructor(value: boolean) {\r\n    super(value);\r\n  }\r\n}\r\n\r\nclass JSONNumberType extends JSONTypeImpl<number> {\r\n\r\n  constructor(value: number) {\r\n    super(value);\r\n  }\r\n\r\n}\r\n\r\nclass JSONStringType extends JSONTypeImpl<string> {\r\n\r\n  constructor(value: string) {\r\n    super(value);\r\n  }\r\n\r\n  public toString(): string {\r\n    const value = this.getValue();\r\n    if (value != null) {\r\n      return JSON.stringify(value.toString());\r\n    }\r\n    return \"null\";\r\n  }\r\n}\r\n\r\nclass JSONObjectType extends JSONTypeImpl<JSONObject> {\r\n\r\n  constructor(value: JSONObject) {\r\n    super(value);\r\n  }\r\n}\r\n\r\nclass JSONArrayType extends JSONTypeImpl<JSONArray<ArrayType>> {\r\n\r\n  constructor(value: JSONArray<ArrayType>) {\r\n    super(value);\r\n  }\r\n\r\n  public toString(): string {\r\n    const value = this.getValue();\r\n    if (value != null) {\r\n      return value.toString();\r\n    }\r\n    return \"null\";\r\n  }\r\n}\r\n\r\nclass JSONNullType extends JSONTypeImpl<null> {\r\n\r\n  constructor() {\r\n    super(null);\r\n  }\r\n\r\n  public toString(): string {\r\n    return \"null\";\r\n  }\r\n}\r\n\r\nclass JSONTypeConverter {\r\n\r\n  public static toJSONType(value: ArrayType): JSONType<ArrayType> {\r\n    if (value === null) {\r\n      return new JSONNullType();\r\n    }\r\n    if (typeof value === \"string\") {\r\n      return new JSONStringType(value);\r\n    }\r\n    if (typeof value === \"number\") {\r\n      return new JSONNumberType(value);\r\n    }\r\n    if (typeof value === \"boolean\") {\r\n      return new JSONBooleanType(value);\r\n    }\r\n    if (value instanceof JSONObject) {\r\n      return new JSONObjectType(value);\r\n    }\r\n    throw new Error(\"Type not supported for value: \" + value);\r\n  }\r\n}\r\n\r\nexport class JSONObject {\r\n\r\n  private values: SimpleMap<JSONTypeImpl<any>> = new SimpleMap<JSONTypeImpl<any>>();\r\n\r\n  public addBoolean(name: string, value: boolean): JSONObject {\r\n    this.checkName(name);\r\n    JSONObject.checkValue(value);\r\n    this.values.put(name, new JSONBooleanType(value));\r\n    return this;\r\n  }\r\n\r\n  public addNumber(name: string, value: number): JSONObject {\r\n    this.checkName(name);\r\n    JSONObject.checkValue(value);\r\n    this.values.put(name, new JSONNumberType(value));\r\n    return this;\r\n  }\r\n\r\n  public addString(name: string, value: string): JSONObject {\r\n    this.checkName(name);\r\n    JSONObject.checkValue(value);\r\n    this.values.put(name, new JSONStringType(value));\r\n    return this;\r\n  }\r\n\r\n  public addNull(name: string): JSONObject {\r\n    this.checkName(name);\r\n    this.values.put(name, new JSONNullType());\r\n    return this;\r\n  }\r\n\r\n  public addArray(name: string, array: JSONArray<ArrayType>): JSONObject {\r\n    this.checkName(name);\r\n    JSONObject.checkValue(array);\r\n    if (array == null) {\r\n      throw new Error(\"Cannot add array as null\");\r\n    }\r\n    this.values.put(name, new JSONArrayType(array));\r\n    return this;\r\n  }\r\n\r\n  public addObject(name: string, object: JSONObject): JSONObject {\r\n    this.checkName(name);\r\n    JSONObject.checkValue(object);\r\n    if (object == null) {\r\n      throw new Error(\"Cannot add object as null\");\r\n    }\r\n    this.values.put(name, new JSONObjectType(object));\r\n    return this;\r\n  }\r\n\r\n  public toString(pretty: boolean = false): string {\r\n    let comma = false;\r\n    const buffer = new StringBuilder();\r\n    buffer.append(\"{\");\r\n    this.values.keys().forEach((key: string) => {\r\n      const value = this.values.get(key);\r\n      if (value != null) {\r\n        if (comma) {\r\n          buffer.append(\",\");\r\n        }\r\n\r\n        buffer.append('\"').append(key).append('\":').append(value.toString());\r\n        comma = true;\r\n      }\r\n    });\r\n    buffer.append(\"}\");\r\n    return buffer.toString();\r\n  }\r\n\r\n  private checkName(name: string): void {\r\n    if (name == null || name === undefined) {\r\n      throw new Error(\"Name is null or undefined\");\r\n    }\r\n    if (this.values.exists(name)) {\r\n      throw new Error(\"Name \" + name + \" is already present for this object\");\r\n    }\r\n  }\r\n\r\n  private static checkValue(value: any): void {\r\n    if (value === undefined) {\r\n      throw new Error(\"Value is undefined\");\r\n    }\r\n  }\r\n}\r\n\r\nexport class JSONArray<T extends ArrayType> {\r\n\r\n  private objects: Array<JSONType<ArrayType>> = [];\r\n\r\n  public add(object: T): JSONArray<T> {\r\n    if (object === undefined) {\r\n      throw new Error(\"Object is not allowed to be undefined\");\r\n    }\r\n    this.objects.push(JSONTypeConverter.toJSONType(object));\r\n    return this;\r\n  }\r\n\r\n  public toString(pretty: boolean = false): string {\r\n    const buffer = new StringBuilder();\r\n    buffer.append(\"[\");\r\n    this.objects.forEach((value, index) => {\r\n      if (index > 0) {\r\n        buffer.append(\",\");\r\n      }\r\n      buffer.append(value.toString());\r\n    });\r\n    buffer.append(\"]\");\r\n\r\n    return buffer.toString();\r\n  }\r\n}\r\n\r\n/**\r\n * Utility class that helps us convert things to and from json (not for normal usage).\r\n */\r\nexport class JSONHelper {\r\n\r\n  public static categoryToJSON(cat: Category, recursive: boolean): JSONObject {\r\n    /*\r\n     {\r\n     \"categories\":\r\n     [\r\n     { id=1,\r\n     name: \"x\",\r\n     parent: null,\r\n     logLevel: \"Error\"\r\n     },\r\n     { id=2,\r\n     name: \"y\",\r\n     parent: 1,\r\n     logLevel: \"Error\"\r\n     }\r\n     ]\r\n     }\r\n     */\r\n\r\n    const arr = new JSONArray<JSONObject>();\r\n    JSONHelper._categoryToJSON(cat, arr, recursive);\r\n    const object = new JSONObject();\r\n    object.addArray(\"categories\", arr);\r\n    return object;\r\n  }\r\n\r\n  private static _categoryToJSON(cat: Category, arr: JSONArray<JSONObject>, recursive: boolean): void {\r\n    const object = new JSONObject();\r\n    object.addNumber(\"id\", cat.id);\r\n    object.addString(\"name\", cat.name);\r\n    object.addString(\"logLevel\", LogLevel[cat.logLevel].toString());\r\n    if (cat.parent != null) {\r\n      object.addNumber(\"parent\", cat.parent.id);\r\n    }\r\n    else {\r\n      object.addNull(\"parent\");\r\n    }\r\n\r\n    arr.add(object);\r\n\r\n    if (recursive) {\r\n      cat.children.forEach((child: Category) => {\r\n        JSONHelper._categoryToJSON(child, arr, recursive);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {ExtensionHelper} from \"./extension/ExtensionHelper\";\r\nimport {LoggerControl, LoggerControlImpl} from \"./control/LogGroupControl\";\r\nimport {CategoryServiceControl, CategoryServiceControlImpl} from \"./control/CategoryServiceControl\";\r\n\r\n// Public stuff we export for extension\r\nexport * from \"./extension/MessagesToExtensionJSON\";\r\nexport * from \"./extension/MessagesFromExtensionJSON\";\r\nexport * from \"./extension/ExtensionMessageJSON\";\r\nexport {ExtensionHelper} from \"./extension/ExtensionHelper\";\r\n\r\n// Category related\r\nexport {AbstractCategoryLogger, CategoryLogMessage} from \"./log/category/AbstractCategoryLogger\";\r\nexport {CategoryConsoleLoggerImpl} from \"./log/category/CategoryConsoleLoggerImpl\";\r\nexport {CategoryDelegateLoggerImpl} from \"./log/category/CategoryDelegateLoggerImpl\";\r\nexport {Category} from \"./log/category/Category\";\r\nexport {CategoryLogger} from \"./log/category/CategoryLogger\";\r\nexport {CategoryRuntimeSettings} from \"./log/category/CategoryRuntimeSettings\";\r\nexport {CategoryConfiguration} from \"./log/category/CategoryConfiguration\";\r\nexport {RuntimeSettings} from \"./log/category/RuntimeSettings\";\r\nexport {CategoryMessageBufferLoggerImpl} from \"./log/category/CategoryMessageBufferImpl\";\r\nexport {CategoryServiceFactory} from \"./log/category/CategoryServiceFactory\";\r\n\r\n// LoggerFactory related.\r\nexport {Logger, MessageType, ErrorType} from \"./log/standard/Logger\";\r\nexport {LoggerFactory} from \"./log/standard/LoggerFactory\";\r\nexport {LoggerFactoryOptions} from \"./log/standard/LoggerFactoryOptions\";\r\nexport {LogGroupRule} from \"./log/standard/LogGroupRule\";\r\nexport {LFService} from \"./log/standard/LFService\";\r\nexport {AbstractLogger, LogMessage} from \"./log/standard/AbstractLogger\";\r\nexport {ConsoleLoggerImpl} from \"./log/standard/ConsoleLoggerImpl\";\r\nexport {MessageBufferLoggerImpl} from \"./log/standard/MessageBufferLoggerImpl\";\r\nexport {CategoryLogFormat, DateFormat, DateFormatEnum, LogFormat, LoggerType, LogLevel} from \"./log/LoggerOptions\";\r\nexport {LogData} from \"./log/LogData\";\r\n\r\n// Console controller related\r\nexport {CategoryServiceControl, CategoryServiceControlSettings} from \"./control/CategoryServiceControl\";\r\nexport {LoggerControl, LoggerFactoryControl, LogGroupControlSettings} from \"./control/LogGroupControl\";\r\n\r\n// Utilities\r\nexport {SimpleMap, LinkedList} from \"./utils/DataStructures\";\r\nexport * from \"./utils/JSONHelper\";\r\nexport {MessageFormatUtils} from \"./utils/MessageUtils\";\r\n\r\n/*\r\n Functions to export on TSL libarary var.\r\n*/\r\n\r\n// Export help function\r\nexport function help(): void {\r\n  /* tslint:disable:no-console */\r\n  console.log(\r\n`help()\r\n   ** Shows this help\r\n\r\n getLogControl(): LoggerControl\r\n   ** Returns LoggerControl Object, use to dynamically change loglevels for log4j logging.\r\n   ** Call .help() on LoggerControl object for available options.\r\n\r\n getCategoryControl(): CategoryServiceControl\r\n   ** Returns CategoryServiceControl Object, use to dynamically change loglevels for category logging.\r\n   ** Call .help() on CategoryServiceControl object for available options.\r\n`\r\n  );\r\n  /* tslint:enable:no-console */\r\n}\r\n\r\n// Export LogControl function (log4j)\r\nexport function getLogControl(): LoggerControl {\r\n  return new LoggerControlImpl();\r\n}\r\n\r\n// Export CategoryControl function\r\nexport function getCategoryControl(): CategoryServiceControl {\r\n  return new CategoryServiceControlImpl();\r\n}\r\n"],"names":["this","require$$0","ArraySet","quickSort","require$$1","base64VLQ","require$$2","ST.fromError","tslib_1.__extends"],"mappings":"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"}